/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: airConditioner.proto */

#ifndef PROTOBUF_C_airConditioner_2eproto__INCLUDED
#define PROTOBUF_C_airConditioner_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Iot__Service__AirConditioner__Properties Iot__Service__AirConditioner__Properties;


/* --- enums --- */

typedef enum _Iot__Service__AirConditioner__AcMode {
  IOT__SERVICE__AIR_CONDITIONER__AC_MODE__MODE_AUTO = 0,
  IOT__SERVICE__AIR_CONDITIONER__AC_MODE__MODE_COOL = 1,
  IOT__SERVICE__AIR_CONDITIONER__AC_MODE__MODE_HEAT = 2,
  IOT__SERVICE__AIR_CONDITIONER__AC_MODE__MODE_DRY = 3,
  IOT__SERVICE__AIR_CONDITIONER__AC_MODE__MODE_FAN = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__AIR_CONDITIONER__AC_MODE)
} Iot__Service__AirConditioner__AcMode;
typedef enum _Iot__Service__AirConditioner__DisplayingTempUnit {
  IOT__SERVICE__AIR_CONDITIONER__DISPLAYING_TEMP_UNIT__UNIT_K = 0,
  IOT__SERVICE__AIR_CONDITIONER__DISPLAYING_TEMP_UNIT__UNIT_F = 1,
  IOT__SERVICE__AIR_CONDITIONER__DISPLAYING_TEMP_UNIT__UNIT_C = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__AIR_CONDITIONER__DISPLAYING_TEMP_UNIT)
} Iot__Service__AirConditioner__DisplayingTempUnit;
typedef enum _Iot__Service__AirConditioner__Sleep {
  IOT__SERVICE__AIR_CONDITIONER__SLEEP__S_OFF = 0,
  IOT__SERVICE__AIR_CONDITIONER__SLEEP__S_ON = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__AIR_CONDITIONER__SLEEP)
} Iot__Service__AirConditioner__Sleep;

/* --- messages --- */

struct  _Iot__Service__AirConditioner__Properties
{
  ProtobufCMessage base;
  protobuf_c_boolean power;
  Iot__Service__AirConditioner__AcMode acmode;
  protobuf_c_boolean eco;
  Iot__Service__AirConditioner__Sleep sleep;
  protobuf_c_boolean rapidmode;
  protobuf_c_boolean electricheating;
  int32_t currenttemperature;
  int32_t targettemperature;
  int32_t outdoortemperature;
  Iot__Service__AirConditioner__DisplayingTempUnit displayingtempunit;
  protobuf_c_boolean speechcontrolenabled;
  protobuf_c_boolean screendisplayenabled;
  protobuf_c_boolean preventsupercool;
  /*
   *0-invalid
   */
  uint32_t appointmentpoweron;
  protobuf_c_boolean airdry;
  /*
   *0-invalid
   */
  uint32_t appointmentpoweroff;
  protobuf_c_boolean mute;
};
#define IOT__SERVICE__AIR_CONDITIONER__PROPERTIES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__air_conditioner__properties__descriptor) \
    , 0, IOT__SERVICE__AIR_CONDITIONER__AC_MODE__MODE_AUTO, 0, IOT__SERVICE__AIR_CONDITIONER__SLEEP__S_OFF, 0, 0, 0, 0, 0, IOT__SERVICE__AIR_CONDITIONER__DISPLAYING_TEMP_UNIT__UNIT_K, 0, 0, 0, 0, 0, 0, 0 }


/* Iot__Service__AirConditioner__Properties methods */
void   iot__service__air_conditioner__properties__init
                     (Iot__Service__AirConditioner__Properties         *message);
size_t iot__service__air_conditioner__properties__get_packed_size
                     (const Iot__Service__AirConditioner__Properties   *message);
size_t iot__service__air_conditioner__properties__pack
                     (const Iot__Service__AirConditioner__Properties   *message,
                      uint8_t             *out);
size_t iot__service__air_conditioner__properties__pack_to_buffer
                     (const Iot__Service__AirConditioner__Properties   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__AirConditioner__Properties *
       iot__service__air_conditioner__properties__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__air_conditioner__properties__free_unpacked
                     (Iot__Service__AirConditioner__Properties *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Iot__Service__AirConditioner__Properties_Closure)
                 (const Iot__Service__AirConditioner__Properties *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    iot__service__air_conditioner__ac_mode__descriptor;
extern const ProtobufCEnumDescriptor    iot__service__air_conditioner__displaying_temp_unit__descriptor;
extern const ProtobufCEnumDescriptor    iot__service__air_conditioner__sleep__descriptor;
extern const ProtobufCMessageDescriptor iot__service__air_conditioner__properties__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_airConditioner_2eproto__INCLUDED */

/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: burner.proto */

#ifndef PROTOBUF_C_burner_2eproto__INCLUDED
#define PROTOBUF_C_burner_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Iot__Service__Burner__ActionInTurnOffFire Iot__Service__Burner__ActionInTurnOffFire;
typedef struct _Iot__Service__Burner__ActionOutTurnOffFire Iot__Service__Burner__ActionOutTurnOffFire;
typedef struct _Iot__Service__Burner__EventDryBraised Iot__Service__Burner__EventDryBraised;
typedef struct _Iot__Service__Burner__EventGasDetected Iot__Service__Burner__EventGasDetected;
typedef struct _Iot__Service__Burner__EventBurnerEventInformation Iot__Service__Burner__EventBurnerEventInformation;
typedef struct _Iot__Service__Burner__Properties Iot__Service__Burner__Properties;


/* --- enums --- */

typedef enum _Iot__Service__Burner__MachineStatus {
  IOT__SERVICE__BURNER__MACHINE_STATUS__IDLE = 0,
  IOT__SERVICE__BURNER__MACHINE_STATUS__PREACTIVE = 1,
  IOT__SERVICE__BURNER__MACHINE_STATUS__ACTIVE = 2,
  IOT__SERVICE__BURNER__MACHINE_STATUS__STOPPED = 3,
  IOT__SERVICE__BURNER__MACHINE_STATUS__ERROR = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__BURNER__MACHINE_STATUS)
} Iot__Service__Burner__MachineStatus;
typedef enum _Iot__Service__Burner__MenuMode {
  IOT__SERVICE__BURNER__MENU_MODE__NONE_MODE = 0,
  IOT__SERVICE__BURNER__MENU_MODE__FISH_SOUP = 1,
  IOT__SERVICE__BURNER__MENU_MODE__CHICKEN_SOUP = 2,
  IOT__SERVICE__BURNER__MENU_MODE__PORKRIB_SOUP = 3,
  IOT__SERVICE__BURNER__MENU_MODE__STEAMING_FISH = 4,
  IOT__SERVICE__BURNER__MENU_MODE__STEAMING_EGG = 5,
  IOT__SERVICE__BURNER__MENU_MODE__DUMPLING = 6,
  IOT__SERVICE__BURNER__MENU_MODE__NOODLE = 7,
  IOT__SERVICE__BURNER__MENU_MODE__STEAK = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__BURNER__MENU_MODE)
} Iot__Service__Burner__MenuMode;
typedef enum _Iot__Service__Burner__SteakLevel {
  IOT__SERVICE__BURNER__STEAK_LEVEL__NONE = 0,
  IOT__SERVICE__BURNER__STEAK_LEVEL__RARE = 1,
  IOT__SERVICE__BURNER__STEAK_LEVEL__MEDIUM_RARE = 2,
  IOT__SERVICE__BURNER__STEAK_LEVEL__MEDIUM = 3,
  IOT__SERVICE__BURNER__STEAK_LEVEL__MEDIUM_WELL = 4,
  IOT__SERVICE__BURNER__STEAK_LEVEL__WELL_DONE = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__BURNER__STEAK_LEVEL)
} Iot__Service__Burner__SteakLevel;
typedef enum _Iot__Service__Burner__Concentration {
  IOT__SERVICE__BURNER__CONCENTRATION__NONE_LEVEL = 0,
  IOT__SERVICE__BURNER__CONCENTRATION__LEVEL_ONE = 1,
  IOT__SERVICE__BURNER__CONCENTRATION__LEVEL_TWO = 2,
  IOT__SERVICE__BURNER__CONCENTRATION__LEVEL_THREE = 3,
  IOT__SERVICE__BURNER__CONCENTRATION__LEVEL_FOUR = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__BURNER__CONCENTRATION)
} Iot__Service__Burner__Concentration;

/* --- messages --- */

struct  _Iot__Service__Burner__ActionInTurnOffFire
{
  ProtobufCMessage base;
};
#define IOT__SERVICE__BURNER__ACTION_IN_TURN_OFF_FIRE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__burner__action_in_turn_off_fire__descriptor) \
     }


struct  _Iot__Service__Burner__ActionOutTurnOffFire
{
  ProtobufCMessage base;
};
#define IOT__SERVICE__BURNER__ACTION_OUT_TURN_OFF_FIRE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__burner__action_out_turn_off_fire__descriptor) \
     }


struct  _Iot__Service__Burner__EventDryBraised
{
  ProtobufCMessage base;
};
#define IOT__SERVICE__BURNER__EVENT_DRY_BRAISED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__burner__event_dry_braised__descriptor) \
     }


struct  _Iot__Service__Burner__EventGasDetected
{
  ProtobufCMessage base;
};
#define IOT__SERVICE__BURNER__EVENT_GAS_DETECTED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__burner__event_gas_detected__descriptor) \
     }


struct  _Iot__Service__Burner__EventBurnerEventInformation
{
  ProtobufCMessage base;
  uint32_t messageno;
};
#define IOT__SERVICE__BURNER__EVENT_BURNER_EVENT_INFORMATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__burner__event_burner_event_information__descriptor) \
    , 0 }


struct  _Iot__Service__Burner__Properties
{
  ProtobufCMessage base;
  /*
   * action turnOffFire(ActionInTurnOffFire) returns (ActionOutTurnOffFire) = 1;
   */
  /*
   * default value 0
   */
  uint32_t heatinglevel;
  uint32_t targettemperature;
  Iot__Service__Burner__MenuMode menumode;
  uint32_t weight;
  uint32_t thickness;
  Iot__Service__Burner__SteakLevel steaklevel;
  Iot__Service__Burner__Concentration concentration;
  uint32_t operationtime;
  uint32_t currenttemperature;
  Iot__Service__Burner__MachineStatus machinestatus;
  /*
   * event dryBraised(EventDryBraised) = 12;
   * event gasDetected(EventGasDetected) = 13;
   * event burnerEventInformation(EventBurnerEventInformation) = 14;
   */
  protobuf_c_boolean constanttempenabled;
  uint32_t appointmentpoweroff;
  protobuf_c_boolean firestatus;
  uint32_t runningduration;
  uint32_t remaintime;
};
#define IOT__SERVICE__BURNER__PROPERTIES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__burner__properties__descriptor) \
    , 0, 0, IOT__SERVICE__BURNER__MENU_MODE__NONE_MODE, 0, 0, IOT__SERVICE__BURNER__STEAK_LEVEL__NONE, IOT__SERVICE__BURNER__CONCENTRATION__NONE_LEVEL, 0, 0, IOT__SERVICE__BURNER__MACHINE_STATUS__IDLE, 0, 0, 0, 0, 0 }


/* Iot__Service__Burner__ActionInTurnOffFire methods */
void   iot__service__burner__action_in_turn_off_fire__init
                     (Iot__Service__Burner__ActionInTurnOffFire         *message);
size_t iot__service__burner__action_in_turn_off_fire__get_packed_size
                     (const Iot__Service__Burner__ActionInTurnOffFire   *message);
size_t iot__service__burner__action_in_turn_off_fire__pack
                     (const Iot__Service__Burner__ActionInTurnOffFire   *message,
                      uint8_t             *out);
size_t iot__service__burner__action_in_turn_off_fire__pack_to_buffer
                     (const Iot__Service__Burner__ActionInTurnOffFire   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Burner__ActionInTurnOffFire *
       iot__service__burner__action_in_turn_off_fire__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__burner__action_in_turn_off_fire__free_unpacked
                     (Iot__Service__Burner__ActionInTurnOffFire *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__Burner__ActionOutTurnOffFire methods */
void   iot__service__burner__action_out_turn_off_fire__init
                     (Iot__Service__Burner__ActionOutTurnOffFire         *message);
size_t iot__service__burner__action_out_turn_off_fire__get_packed_size
                     (const Iot__Service__Burner__ActionOutTurnOffFire   *message);
size_t iot__service__burner__action_out_turn_off_fire__pack
                     (const Iot__Service__Burner__ActionOutTurnOffFire   *message,
                      uint8_t             *out);
size_t iot__service__burner__action_out_turn_off_fire__pack_to_buffer
                     (const Iot__Service__Burner__ActionOutTurnOffFire   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Burner__ActionOutTurnOffFire *
       iot__service__burner__action_out_turn_off_fire__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__burner__action_out_turn_off_fire__free_unpacked
                     (Iot__Service__Burner__ActionOutTurnOffFire *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__Burner__EventDryBraised methods */
void   iot__service__burner__event_dry_braised__init
                     (Iot__Service__Burner__EventDryBraised         *message);
size_t iot__service__burner__event_dry_braised__get_packed_size
                     (const Iot__Service__Burner__EventDryBraised   *message);
size_t iot__service__burner__event_dry_braised__pack
                     (const Iot__Service__Burner__EventDryBraised   *message,
                      uint8_t             *out);
size_t iot__service__burner__event_dry_braised__pack_to_buffer
                     (const Iot__Service__Burner__EventDryBraised   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Burner__EventDryBraised *
       iot__service__burner__event_dry_braised__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__burner__event_dry_braised__free_unpacked
                     (Iot__Service__Burner__EventDryBraised *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__Burner__EventGasDetected methods */
void   iot__service__burner__event_gas_detected__init
                     (Iot__Service__Burner__EventGasDetected         *message);
size_t iot__service__burner__event_gas_detected__get_packed_size
                     (const Iot__Service__Burner__EventGasDetected   *message);
size_t iot__service__burner__event_gas_detected__pack
                     (const Iot__Service__Burner__EventGasDetected   *message,
                      uint8_t             *out);
size_t iot__service__burner__event_gas_detected__pack_to_buffer
                     (const Iot__Service__Burner__EventGasDetected   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Burner__EventGasDetected *
       iot__service__burner__event_gas_detected__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__burner__event_gas_detected__free_unpacked
                     (Iot__Service__Burner__EventGasDetected *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__Burner__EventBurnerEventInformation methods */
void   iot__service__burner__event_burner_event_information__init
                     (Iot__Service__Burner__EventBurnerEventInformation         *message);
size_t iot__service__burner__event_burner_event_information__get_packed_size
                     (const Iot__Service__Burner__EventBurnerEventInformation   *message);
size_t iot__service__burner__event_burner_event_information__pack
                     (const Iot__Service__Burner__EventBurnerEventInformation   *message,
                      uint8_t             *out);
size_t iot__service__burner__event_burner_event_information__pack_to_buffer
                     (const Iot__Service__Burner__EventBurnerEventInformation   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Burner__EventBurnerEventInformation *
       iot__service__burner__event_burner_event_information__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__burner__event_burner_event_information__free_unpacked
                     (Iot__Service__Burner__EventBurnerEventInformation *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__Burner__Properties methods */
void   iot__service__burner__properties__init
                     (Iot__Service__Burner__Properties         *message);
size_t iot__service__burner__properties__get_packed_size
                     (const Iot__Service__Burner__Properties   *message);
size_t iot__service__burner__properties__pack
                     (const Iot__Service__Burner__Properties   *message,
                      uint8_t             *out);
size_t iot__service__burner__properties__pack_to_buffer
                     (const Iot__Service__Burner__Properties   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Burner__Properties *
       iot__service__burner__properties__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__burner__properties__free_unpacked
                     (Iot__Service__Burner__Properties *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Iot__Service__Burner__ActionInTurnOffFire_Closure)
                 (const Iot__Service__Burner__ActionInTurnOffFire *message,
                  void *closure_data);
typedef void (*Iot__Service__Burner__ActionOutTurnOffFire_Closure)
                 (const Iot__Service__Burner__ActionOutTurnOffFire *message,
                  void *closure_data);
typedef void (*Iot__Service__Burner__EventDryBraised_Closure)
                 (const Iot__Service__Burner__EventDryBraised *message,
                  void *closure_data);
typedef void (*Iot__Service__Burner__EventGasDetected_Closure)
                 (const Iot__Service__Burner__EventGasDetected *message,
                  void *closure_data);
typedef void (*Iot__Service__Burner__EventBurnerEventInformation_Closure)
                 (const Iot__Service__Burner__EventBurnerEventInformation *message,
                  void *closure_data);
typedef void (*Iot__Service__Burner__Properties_Closure)
                 (const Iot__Service__Burner__Properties *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    iot__service__burner__machine_status__descriptor;
extern const ProtobufCEnumDescriptor    iot__service__burner__menu_mode__descriptor;
extern const ProtobufCEnumDescriptor    iot__service__burner__steak_level__descriptor;
extern const ProtobufCEnumDescriptor    iot__service__burner__concentration__descriptor;
extern const ProtobufCMessageDescriptor iot__service__burner__action_in_turn_off_fire__descriptor;
extern const ProtobufCMessageDescriptor iot__service__burner__action_out_turn_off_fire__descriptor;
extern const ProtobufCMessageDescriptor iot__service__burner__event_dry_braised__descriptor;
extern const ProtobufCMessageDescriptor iot__service__burner__event_gas_detected__descriptor;
extern const ProtobufCMessageDescriptor iot__service__burner__event_burner_event_information__descriptor;
extern const ProtobufCMessageDescriptor iot__service__burner__properties__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_burner_2eproto__INCLUDED */

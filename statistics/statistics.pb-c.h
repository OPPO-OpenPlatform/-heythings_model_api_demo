/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: statistics.proto */

#ifndef PROTOBUF_C_statistics_2eproto__INCLUDED
#define PROTOBUF_C_statistics_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "schema/common/common.pb-c.h"

typedef struct _Iot__Service__Statistics__EnergyConsumptionData Iot__Service__Statistics__EnergyConsumptionData;
typedef struct _Iot__Service__Statistics__EventTrackingData Iot__Service__Statistics__EventTrackingData;
typedef struct _Iot__Service__Statistics__StatisticsData Iot__Service__Statistics__StatisticsData;
typedef struct _Iot__Service__Statistics__Properties Iot__Service__Statistics__Properties;


/* --- enums --- */

typedef enum _Iot__Service__Statistics__EnumDataType {
  /*
   *电量统计，对应message为EnergyConsumptionData
   */
  IOT__SERVICE__STATISTICS__ENUM_DATA_TYPE__ENERGY_CONSUMPTION_DATA = 0,
  /*
   *埋点数据，对应message为EventTrackingData
   */
  IOT__SERVICE__STATISTICS__ENUM_DATA_TYPE__EVENT_TRACKING_DATA = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__STATISTICS__ENUM_DATA_TYPE)
} Iot__Service__Statistics__EnumDataType;

/* --- messages --- */

struct  _Iot__Service__Statistics__EnergyConsumptionData
{
  ProtobufCMessage base;
  /*
   *本条数据为当前时间点前1小时的电量统计
   *当没有时间同步时，设备先按本地时间记录时间戳，不作上报
   *待设备同步到时间后则按最新时间更新之前记录的时间戳，再上报数据
   */
  uint64_t timestamp;
  /*
   *单位kw/h，精度0.01
   */
  uint32_t value;
};
#define IOT__SERVICE__STATISTICS__ENERGY_CONSUMPTION_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__statistics__energy_consumption_data__descriptor) \
    , 0, 0 }


struct  _Iot__Service__Statistics__EventTrackingData
{
  ProtobufCMessage base;
  /*
   *本条数据为当前时间点发生的埋点事件
   *当没有时间同步时，设备先按本地时间记录时间戳，不作上报
   *待设备同步到时间后则按最新时间更新之前记录的时间戳，再上报数据
   */
  uint64_t timestamp;
  char *key;
  ProtobufCBinaryData value;
};
#define IOT__SERVICE__STATISTICS__EVENT_TRACKING_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__statistics__event_tracking_data__descriptor) \
    , 0, (char *)protobuf_c_empty_string, {0,NULL} }


struct  _Iot__Service__Statistics__StatisticsData
{
  ProtobufCMessage base;
  /*
   *对应设备抽象服务的siid，如排插插孔1的siid
   */
  uint32_t siid;
  /*
   *统计数据类型
   */
  Iot__Service__Statistics__EnumDataType datatype;
  /*
   *data由dataType对应message序列化
   */
  size_t n_data;
  ProtobufCBinaryData *data;
};
#define IOT__SERVICE__STATISTICS__STATISTICS_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__statistics__statistics_data__descriptor) \
    , 0, IOT__SERVICE__STATISTICS__ENUM_DATA_TYPE__ENERGY_CONSUMPTION_DATA, 0,NULL }


struct  _Iot__Service__Statistics__Properties
{
  ProtobufCMessage base;
  size_t n_statisticsdata;
  ArrayNode **statisticsdata;
};
#define IOT__SERVICE__STATISTICS__PROPERTIES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__statistics__properties__descriptor) \
    , 0,NULL }


/* Iot__Service__Statistics__EnergyConsumptionData methods */
void   iot__service__statistics__energy_consumption_data__init
                     (Iot__Service__Statistics__EnergyConsumptionData         *message);
size_t iot__service__statistics__energy_consumption_data__get_packed_size
                     (const Iot__Service__Statistics__EnergyConsumptionData   *message);
size_t iot__service__statistics__energy_consumption_data__pack
                     (const Iot__Service__Statistics__EnergyConsumptionData   *message,
                      uint8_t             *out);
size_t iot__service__statistics__energy_consumption_data__pack_to_buffer
                     (const Iot__Service__Statistics__EnergyConsumptionData   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Statistics__EnergyConsumptionData *
       iot__service__statistics__energy_consumption_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__statistics__energy_consumption_data__free_unpacked
                     (Iot__Service__Statistics__EnergyConsumptionData *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__Statistics__EventTrackingData methods */
void   iot__service__statistics__event_tracking_data__init
                     (Iot__Service__Statistics__EventTrackingData         *message);
size_t iot__service__statistics__event_tracking_data__get_packed_size
                     (const Iot__Service__Statistics__EventTrackingData   *message);
size_t iot__service__statistics__event_tracking_data__pack
                     (const Iot__Service__Statistics__EventTrackingData   *message,
                      uint8_t             *out);
size_t iot__service__statistics__event_tracking_data__pack_to_buffer
                     (const Iot__Service__Statistics__EventTrackingData   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Statistics__EventTrackingData *
       iot__service__statistics__event_tracking_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__statistics__event_tracking_data__free_unpacked
                     (Iot__Service__Statistics__EventTrackingData *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__Statistics__StatisticsData methods */
void   iot__service__statistics__statistics_data__init
                     (Iot__Service__Statistics__StatisticsData         *message);
size_t iot__service__statistics__statistics_data__get_packed_size
                     (const Iot__Service__Statistics__StatisticsData   *message);
size_t iot__service__statistics__statistics_data__pack
                     (const Iot__Service__Statistics__StatisticsData   *message,
                      uint8_t             *out);
size_t iot__service__statistics__statistics_data__pack_to_buffer
                     (const Iot__Service__Statistics__StatisticsData   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Statistics__StatisticsData *
       iot__service__statistics__statistics_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__statistics__statistics_data__free_unpacked
                     (Iot__Service__Statistics__StatisticsData *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__Statistics__Properties methods */
void   iot__service__statistics__properties__init
                     (Iot__Service__Statistics__Properties         *message);
size_t iot__service__statistics__properties__get_packed_size
                     (const Iot__Service__Statistics__Properties   *message);
size_t iot__service__statistics__properties__pack
                     (const Iot__Service__Statistics__Properties   *message,
                      uint8_t             *out);
size_t iot__service__statistics__properties__pack_to_buffer
                     (const Iot__Service__Statistics__Properties   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Statistics__Properties *
       iot__service__statistics__properties__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__statistics__properties__free_unpacked
                     (Iot__Service__Statistics__Properties *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Iot__Service__Statistics__EnergyConsumptionData_Closure)
                 (const Iot__Service__Statistics__EnergyConsumptionData *message,
                  void *closure_data);
typedef void (*Iot__Service__Statistics__EventTrackingData_Closure)
                 (const Iot__Service__Statistics__EventTrackingData *message,
                  void *closure_data);
typedef void (*Iot__Service__Statistics__StatisticsData_Closure)
                 (const Iot__Service__Statistics__StatisticsData *message,
                  void *closure_data);
typedef void (*Iot__Service__Statistics__Properties_Closure)
                 (const Iot__Service__Statistics__Properties *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    iot__service__statistics__enum_data_type__descriptor;
extern const ProtobufCMessageDescriptor iot__service__statistics__energy_consumption_data__descriptor;
extern const ProtobufCMessageDescriptor iot__service__statistics__event_tracking_data__descriptor;
extern const ProtobufCMessageDescriptor iot__service__statistics__statistics_data__descriptor;
extern const ProtobufCMessageDescriptor iot__service__statistics__properties__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_statistics_2eproto__INCLUDED */

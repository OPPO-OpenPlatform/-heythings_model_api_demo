/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: electricCooker.proto */

#ifndef PROTOBUF_C_electricCooker_2eproto__INCLUDED
#define PROTOBUF_C_electricCooker_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Iot__Service__ElectricCooker__EventOpenAlarm Iot__Service__ElectricCooker__EventOpenAlarm;
typedef struct _Iot__Service__ElectricCooker__AppointmentTaskCompleted Iot__Service__ElectricCooker__AppointmentTaskCompleted;
typedef struct _Iot__Service__ElectricCooker__EventCookingEnd Iot__Service__ElectricCooker__EventCookingEnd;
typedef struct _Iot__Service__ElectricCooker__EventDryBraised Iot__Service__ElectricCooker__EventDryBraised;
typedef struct _Iot__Service__ElectricCooker__Properties Iot__Service__ElectricCooker__Properties;


/* --- enums --- */

typedef enum _Iot__Service__ElectricCooker__ElectricCookerMode {
  IOT__SERVICE__ELECTRIC_COOKER__ELECTRIC_COOKER_MODE__RICE = 0,
  IOT__SERVICE__ELECTRIC_COOKER__ELECTRIC_COOKER_MODE__TURBO = 1,
  IOT__SERVICE__ELECTRIC_COOKER__ELECTRIC_COOKER_MODE__STANDARD = 2,
  IOT__SERVICE__ELECTRIC_COOKER__ELECTRIC_COOKER_MODE__PORRIDGE = 3,
  IOT__SERVICE__ELECTRIC_COOKER__ELECTRIC_COOKER_MODE__SOUP = 4,
  IOT__SERVICE__ELECTRIC_COOKER__ELECTRIC_COOKER_MODE__STEAMING = 5,
  IOT__SERVICE__ELECTRIC_COOKER__ELECTRIC_COOKER_MODE__CEREALANDRICE = 6,
  IOT__SERVICE__ELECTRIC_COOKER__ELECTRIC_COOKER_MODE__BROWNRICE = 7,
  IOT__SERVICE__ELECTRIC_COOKER__ELECTRIC_COOKER_MODE__HEATPRESERVATION = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__ELECTRIC_COOKER__ELECTRIC_COOKER_MODE)
} Iot__Service__ElectricCooker__ElectricCookerMode;
typedef enum _Iot__Service__ElectricCooker__Taste {
  IOT__SERVICE__ELECTRIC_COOKER__TASTE__SOFTTASTE = 0,
  IOT__SERVICE__ELECTRIC_COOKER__TASTE__STANDARDTASTE = 1,
  IOT__SERVICE__ELECTRIC_COOKER__TASTE__HARDTASTE = 2,
  IOT__SERVICE__ELECTRIC_COOKER__TASTE__STICKYTASTE = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__ELECTRIC_COOKER__TASTE)
} Iot__Service__ElectricCooker__Taste;
typedef enum _Iot__Service__ElectricCooker__Rice {
  IOT__SERVICE__ELECTRIC_COOKER__RICE__NORMAL = 0,
  IOT__SERVICE__ELECTRIC_COOKER__RICE__BASMATI = 1,
  IOT__SERVICE__ELECTRIC_COOKER__RICE__NORTHEASTRICE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__ELECTRIC_COOKER__RICE)
} Iot__Service__ElectricCooker__Rice;
typedef enum _Iot__Service__ElectricCooker__CookerOperationMode {
  IOT__SERVICE__ELECTRIC_COOKER__COOKER_OPERATION_MODE__COMPLETION = 0,
  IOT__SERVICE__ELECTRIC_COOKER__COOKER_OPERATION_MODE__RESERVING = 1,
  IOT__SERVICE__ELECTRIC_COOKER__COOKER_OPERATION_MODE__HEATPRESERVING = 2,
  IOT__SERVICE__ELECTRIC_COOKER__COOKER_OPERATION_MODE__CANCELLATION = 3,
  IOT__SERVICE__ELECTRIC_COOKER__COOKER_OPERATION_MODE__WORKING = 4,
  IOT__SERVICE__ELECTRIC_COOKER__COOKER_OPERATION_MODE__awakeningRice = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__ELECTRIC_COOKER__COOKER_OPERATION_MODE)
} Iot__Service__ElectricCooker__CookerOperationMode;

/* --- messages --- */

struct  _Iot__Service__ElectricCooker__EventOpenAlarm
{
  ProtobufCMessage base;
};
#define IOT__SERVICE__ELECTRIC_COOKER__EVENT_OPEN_ALARM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__electric_cooker__event_open_alarm__descriptor) \
     }


struct  _Iot__Service__ElectricCooker__AppointmentTaskCompleted
{
  ProtobufCMessage base;
  protobuf_c_boolean status;
  char *name;
  uint32_t hour;
  uint32_t min;
  uint32_t sec;
};
#define IOT__SERVICE__ELECTRIC_COOKER__APPOINTMENT_TASK_COMPLETED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__electric_cooker__appointment_task_completed__descriptor) \
    , 0, (char *)protobuf_c_empty_string, 0, 0, 0 }


struct  _Iot__Service__ElectricCooker__EventCookingEnd
{
  ProtobufCMessage base;
};
#define IOT__SERVICE__ELECTRIC_COOKER__EVENT_COOKING_END__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__electric_cooker__event_cooking_end__descriptor) \
     }


struct  _Iot__Service__ElectricCooker__EventDryBraised
{
  ProtobufCMessage base;
};
#define IOT__SERVICE__ELECTRIC_COOKER__EVENT_DRY_BRAISED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__electric_cooker__event_dry_braised__descriptor) \
     }


struct  _Iot__Service__ElectricCooker__Properties
{
  ProtobufCMessage base;
  protobuf_c_boolean power;
  Iot__Service__ElectricCooker__ElectricCookerMode electriccookermode;
  uint32_t remaintime;
  uint32_t preservingheatduration;
  uint32_t heatpreservationtime;
  Iot__Service__ElectricCooker__Taste taste;
  Iot__Service__ElectricCooker__Rice rice;
  /*
   * event openAlarm(EventOpenAlarm) = 8;
   */
  int32_t extratimeforcooking;
  Iot__Service__ElectricCooker__CookerOperationMode cookeroperationmode;
  /*
   * event cookingEnd(EventCookingEnd) = 12;
   * event dryBraised(EventDryBraised) = 13;
   */
  Iot__Service__ElectricCooker__AppointmentTaskCompleted *appointmenttaskcompleted;
};
#define IOT__SERVICE__ELECTRIC_COOKER__PROPERTIES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__electric_cooker__properties__descriptor) \
    , 0, IOT__SERVICE__ELECTRIC_COOKER__ELECTRIC_COOKER_MODE__RICE, 0, 0, 0, IOT__SERVICE__ELECTRIC_COOKER__TASTE__SOFTTASTE, IOT__SERVICE__ELECTRIC_COOKER__RICE__NORMAL, 0, IOT__SERVICE__ELECTRIC_COOKER__COOKER_OPERATION_MODE__COMPLETION, NULL }


/* Iot__Service__ElectricCooker__EventOpenAlarm methods */
void   iot__service__electric_cooker__event_open_alarm__init
                     (Iot__Service__ElectricCooker__EventOpenAlarm         *message);
size_t iot__service__electric_cooker__event_open_alarm__get_packed_size
                     (const Iot__Service__ElectricCooker__EventOpenAlarm   *message);
size_t iot__service__electric_cooker__event_open_alarm__pack
                     (const Iot__Service__ElectricCooker__EventOpenAlarm   *message,
                      uint8_t             *out);
size_t iot__service__electric_cooker__event_open_alarm__pack_to_buffer
                     (const Iot__Service__ElectricCooker__EventOpenAlarm   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__ElectricCooker__EventOpenAlarm *
       iot__service__electric_cooker__event_open_alarm__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__electric_cooker__event_open_alarm__free_unpacked
                     (Iot__Service__ElectricCooker__EventOpenAlarm *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__ElectricCooker__AppointmentTaskCompleted methods */
void   iot__service__electric_cooker__appointment_task_completed__init
                     (Iot__Service__ElectricCooker__AppointmentTaskCompleted         *message);
size_t iot__service__electric_cooker__appointment_task_completed__get_packed_size
                     (const Iot__Service__ElectricCooker__AppointmentTaskCompleted   *message);
size_t iot__service__electric_cooker__appointment_task_completed__pack
                     (const Iot__Service__ElectricCooker__AppointmentTaskCompleted   *message,
                      uint8_t             *out);
size_t iot__service__electric_cooker__appointment_task_completed__pack_to_buffer
                     (const Iot__Service__ElectricCooker__AppointmentTaskCompleted   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__ElectricCooker__AppointmentTaskCompleted *
       iot__service__electric_cooker__appointment_task_completed__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__electric_cooker__appointment_task_completed__free_unpacked
                     (Iot__Service__ElectricCooker__AppointmentTaskCompleted *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__ElectricCooker__EventCookingEnd methods */
void   iot__service__electric_cooker__event_cooking_end__init
                     (Iot__Service__ElectricCooker__EventCookingEnd         *message);
size_t iot__service__electric_cooker__event_cooking_end__get_packed_size
                     (const Iot__Service__ElectricCooker__EventCookingEnd   *message);
size_t iot__service__electric_cooker__event_cooking_end__pack
                     (const Iot__Service__ElectricCooker__EventCookingEnd   *message,
                      uint8_t             *out);
size_t iot__service__electric_cooker__event_cooking_end__pack_to_buffer
                     (const Iot__Service__ElectricCooker__EventCookingEnd   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__ElectricCooker__EventCookingEnd *
       iot__service__electric_cooker__event_cooking_end__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__electric_cooker__event_cooking_end__free_unpacked
                     (Iot__Service__ElectricCooker__EventCookingEnd *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__ElectricCooker__EventDryBraised methods */
void   iot__service__electric_cooker__event_dry_braised__init
                     (Iot__Service__ElectricCooker__EventDryBraised         *message);
size_t iot__service__electric_cooker__event_dry_braised__get_packed_size
                     (const Iot__Service__ElectricCooker__EventDryBraised   *message);
size_t iot__service__electric_cooker__event_dry_braised__pack
                     (const Iot__Service__ElectricCooker__EventDryBraised   *message,
                      uint8_t             *out);
size_t iot__service__electric_cooker__event_dry_braised__pack_to_buffer
                     (const Iot__Service__ElectricCooker__EventDryBraised   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__ElectricCooker__EventDryBraised *
       iot__service__electric_cooker__event_dry_braised__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__electric_cooker__event_dry_braised__free_unpacked
                     (Iot__Service__ElectricCooker__EventDryBraised *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__ElectricCooker__Properties methods */
void   iot__service__electric_cooker__properties__init
                     (Iot__Service__ElectricCooker__Properties         *message);
size_t iot__service__electric_cooker__properties__get_packed_size
                     (const Iot__Service__ElectricCooker__Properties   *message);
size_t iot__service__electric_cooker__properties__pack
                     (const Iot__Service__ElectricCooker__Properties   *message,
                      uint8_t             *out);
size_t iot__service__electric_cooker__properties__pack_to_buffer
                     (const Iot__Service__ElectricCooker__Properties   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__ElectricCooker__Properties *
       iot__service__electric_cooker__properties__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__electric_cooker__properties__free_unpacked
                     (Iot__Service__ElectricCooker__Properties *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Iot__Service__ElectricCooker__EventOpenAlarm_Closure)
                 (const Iot__Service__ElectricCooker__EventOpenAlarm *message,
                  void *closure_data);
typedef void (*Iot__Service__ElectricCooker__AppointmentTaskCompleted_Closure)
                 (const Iot__Service__ElectricCooker__AppointmentTaskCompleted *message,
                  void *closure_data);
typedef void (*Iot__Service__ElectricCooker__EventCookingEnd_Closure)
                 (const Iot__Service__ElectricCooker__EventCookingEnd *message,
                  void *closure_data);
typedef void (*Iot__Service__ElectricCooker__EventDryBraised_Closure)
                 (const Iot__Service__ElectricCooker__EventDryBraised *message,
                  void *closure_data);
typedef void (*Iot__Service__ElectricCooker__Properties_Closure)
                 (const Iot__Service__ElectricCooker__Properties *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    iot__service__electric_cooker__electric_cooker_mode__descriptor;
extern const ProtobufCEnumDescriptor    iot__service__electric_cooker__taste__descriptor;
extern const ProtobufCEnumDescriptor    iot__service__electric_cooker__rice__descriptor;
extern const ProtobufCEnumDescriptor    iot__service__electric_cooker__cooker_operation_mode__descriptor;
extern const ProtobufCMessageDescriptor iot__service__electric_cooker__event_open_alarm__descriptor;
extern const ProtobufCMessageDescriptor iot__service__electric_cooker__appointment_task_completed__descriptor;
extern const ProtobufCMessageDescriptor iot__service__electric_cooker__event_cooking_end__descriptor;
extern const ProtobufCMessageDescriptor iot__service__electric_cooker__event_dry_braised__descriptor;
extern const ProtobufCMessageDescriptor iot__service__electric_cooker__properties__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_electricCooker_2eproto__INCLUDED */

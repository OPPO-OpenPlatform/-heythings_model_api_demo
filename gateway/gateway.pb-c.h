/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: gateway.proto */

#ifndef PROTOBUF_C_gateway_2eproto__INCLUDED
#define PROTOBUF_C_gateway_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "schema/common/common.pb-c.h"

typedef struct _Iot__Service__Gateway__ActionInScanSubDevice Iot__Service__Gateway__ActionInScanSubDevice;
typedef struct _Iot__Service__Gateway__ActionOutScanSubDevice Iot__Service__Gateway__ActionOutScanSubDevice;
typedef struct _Iot__Service__Gateway__ActionOutScanSubDevice__SubDevice Iot__Service__Gateway__ActionOutScanSubDevice__SubDevice;
typedef struct _Iot__Service__Gateway__ActionInSetupSubDevice Iot__Service__Gateway__ActionInSetupSubDevice;
typedef struct _Iot__Service__Gateway__ActionOutSetupSubDevice Iot__Service__Gateway__ActionOutSetupSubDevice;
typedef struct _Iot__Service__Gateway__NeighborTable Iot__Service__Gateway__NeighborTable;
typedef struct _Iot__Service__Gateway__EventDevDiscovered Iot__Service__Gateway__EventDevDiscovered;
typedef struct _Iot__Service__Gateway__EventDevDiscovered__DevList Iot__Service__Gateway__EventDevDiscovered__DevList;
typedef struct _Iot__Service__Gateway__ActionInSetupDevice Iot__Service__Gateway__ActionInSetupDevice;
typedef struct _Iot__Service__Gateway__ActionOutSetupDevice Iot__Service__Gateway__ActionOutSetupDevice;
typedef struct _Iot__Service__Gateway__Properties Iot__Service__Gateway__Properties;


/* --- enums --- */

typedef enum _Iot__Service__Gateway__ActionOutSetupSubDevice__Progress {
  /*
   * 无法确定当前进度或不支持通知进度
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_SUB_DEVICE__PROGRESS__SubUnkonw = 0,
  /*
   * 设备已收到配置
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_SUB_DEVICE__PROGRESS__SubSetupReceived = 1,
  /*
   * 等待用户交互
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_SUB_DEVICE__PROGRESS__SubWaitingUserInteractive = 32,
  /*
   * 准备初始化设备
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_SUB_DEVICE__PROGRESS__SubDeviceInit = 64
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_SUB_DEVICE__PROGRESS)
} Iot__Service__Gateway__ActionOutSetupSubDevice__Progress;
typedef enum _Iot__Service__Gateway__ActionOutSetupSubDevice__Result {
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_SUB_DEVICE__RESULT__SubSuccess = 0
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_SUB_DEVICE__RESULT)
} Iot__Service__Gateway__ActionOutSetupSubDevice__Result;
typedef enum _Iot__Service__Gateway__EventDevDiscovered__DevList__Capability {
  /*
   * 默认是0，无任何能力
   */
  IOT__SERVICE__GATEWAY__EVENT_DEV_DISCOVERED__DEV_LIST__CAPABILITY__DEFAULT = 0,
  /*
   * bit0:有二层配网能力 （使用ECDH交换密钥）
   */
  IOT__SERVICE__GATEWAY__EVENT_DEV_DISCOVERED__DEV_LIST__CAPABILITY__SUPPORT_L2SETUP_ECDH = 1,
  /*
   * bit1:有PMK连接wifi能力
   */
  IOT__SERVICE__GATEWAY__EVENT_DEV_DISCOVERED__DEV_LIST__CAPABILITY__SUPPORT_PMK = 2,
  /*
   * bit2:有二层配网能力 （使用EC-JPAKE交换密钥）
   */
  IOT__SERVICE__GATEWAY__EVENT_DEV_DISCOVERED__DEV_LIST__CAPABILITY__SUPPORT_L2SETUP_ECJPAKE = 4,
  /*
   * bit3:需要进行路由器配置，后面对应绑定请求应答的TYPE分别为0x07和0x08
   */
  IOT__SERVICE__GATEWAY__EVENT_DEV_DISCOVERED__DEV_LIST__CAPABILITY__SUPPORT_ROUTER_SETUP = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__GATEWAY__EVENT_DEV_DISCOVERED__DEV_LIST__CAPABILITY)
} Iot__Service__Gateway__EventDevDiscovered__DevList__Capability;
typedef enum _Iot__Service__Gateway__EventDevDiscovered__DevList__Status {
  /*
   * 已配网或正在处理配网
   */
  IOT__SERVICE__GATEWAY__EVENT_DEV_DISCOVERED__DEV_LIST__STATUS__ALREADY_BIND = 0,
  /*
   * 待配网
   */
  IOT__SERVICE__GATEWAY__EVENT_DEV_DISCOVERED__DEV_LIST__STATUS__NEED_BIND = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__GATEWAY__EVENT_DEV_DISCOVERED__DEV_LIST__STATUS)
} Iot__Service__Gateway__EventDevDiscovered__DevList__Status;
typedef enum _Iot__Service__Gateway__ActionOutSetupDevice__Status {
  /*
   * 等待接收设备配置
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__STATUS__DeviceSetupWaiting = 0,
  /*
   * 已收到配置状态
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__STATUS__DeviceSetupReceived = 1,
  /*
   * 等待用户交互
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__STATUS__DeviceWaitingForUserInteractive = 1024,
  /*
   * 设备正在准备联网组件
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__STATUS__NetworkPreparing = 4096,
  /*
   * 正在搜索、连接网络
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__STATUS__NetworkAssosciating = 5120,
  /*
   * 正在网络认证
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__STATUS__NetworkAuthencating = 6144,
  /*
   * 正在获取网络地址
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__STATUS__NetworkRequestingAddress = 7168,
  /*
   * 准备连接到服务器
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__STATUS__ServerPreparing = 8192,
  /*
   * 正在连接到服务器
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__STATUS__ServerConnecting = 9216,
  /*
   * 正在认证身份
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__STATUS__ServerAuthencating = 10240,
  /*
   * 正在绑定设备到用户
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__STATUS__ServerBindingUser = 11264,
  /*
   * 设备连上云后准备初始化设备
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__STATUS__DevicePreparingInitialization = 12288,
  /*
   * 由设备自己定义的初始化进度代码
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__STATUS__DeviceSpecifiedInitializationProgressStart = 13312
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__STATUS)
} Iot__Service__Gateway__ActionOutSetupDevice__Status;
typedef enum _Iot__Service__Gateway__ActionOutSetupDevice__Result {
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__RESULT__OK = 0,
  /*
   * EC-JPAKE 继续
   * detail应填写ecjpakeCountinue字段
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__RESULT__ECJPAKE_CONTINUE = 1,
  /*
   * 被用户主动拒绝
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__RESULT__USER_INTERACTIVE_REJECT = 2,
  /*
   * 超过最大配置次数
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__RESULT__MAX_SETUP_EXCESSED = 3,
  /*
   * 加密方式不支持
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__RESULT__ENCRYPTION_NOT_SUPPORTED = 4,
  /*
   * WIFI热点探测失败
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__RESULT__WIFI_PROBE_FAILED = 5,
  /*
   * WIFI认证失败
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__RESULT__WIFI_AUTH_FAILED = 6,
  /*
   * WIFI 其它连接错误
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__RESULT__WIFI_OTHER_ERROR = 7,
  /*
   * 获取网络地址失败
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__RESULT__REQUEST_NETWORK_ADDRESS_FAILED = 8,
  /*
   * 服务器全地址不可达（路由错误、DNS解析失败或连接失败）
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__RESULT__SERVER_UNREACHABLE = 9,
  /*
   * 安全连接握手失败
   * 一次服务器TLS连接失败并不终止整个连接服务器过程，当所有服务器地址尝试均失败时，若
   * 存在TLS连接错误，则使用SERVER_TLS_HANDSHAKE_FAILED。
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__RESULT__SERVER_TLS_HANDSHAKE_FAILED = 10,
  /*
   * 设备绑定被服务器明确拒绝。
   * detail应填写serverRejectedCode
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__RESULT__SERVER_REJECTED = 11,
  /*
   * 服务器响应超时
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__RESULT__SERVER_TIMEOUT = 12,
  /*
   * 配置失败，由于设备从收到了意料之外的数据
   */
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__RESULT__UNEXPECTED_SETUP_DATA = 13
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__RESULT)
} Iot__Service__Gateway__ActionOutSetupDevice__Result;
typedef enum _Iot__Service__Gateway__DiscoveryType {
  /*
   * WiFi二层
   */
  IOT__SERVICE__GATEWAY__DISCOVERY_TYPE__WIFI_TWO = 0,
  /*
   * WiFi AP
   */
  IOT__SERVICE__GATEWAY__DISCOVERY_TYPE__WIFI_AP = 1,
  /*
   * BLE
   */
  IOT__SERVICE__GATEWAY__DISCOVERY_TYPE__BLE = 2,
  /*
   * 局域网DNS-SD
   */
  IOT__SERVICE__GATEWAY__DISCOVERY_TYPE__LAN = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__GATEWAY__DISCOVERY_TYPE)
} Iot__Service__Gateway__DiscoveryType;

/* --- messages --- */

struct  _Iot__Service__Gateway__ActionInScanSubDevice
{
  ProtobufCMessage base;
  char *pid;
  /*
   *蓝牙设备为mac的最后4个16进制数字，小写
   *蓝牙mesh设备为uuid
   */
  char *devid;
  /*
   *扫描时长，单位：毫秒
   *0-网关自己决定扫描时长，并一次返回扫描结果
   */
  uint32_t scantime;
};
#define IOT__SERVICE__GATEWAY__ACTION_IN_SCAN_SUB_DEVICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__gateway__action_in_scan_sub_device__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


struct  _Iot__Service__Gateway__ActionOutScanSubDevice__SubDevice
{
  ProtobufCMessage base;
  char *pid;
  /*
   *蓝牙设备为mac的最后4个16进制数字，小写
   *蓝牙mesh设备为uuid
   */
  char *devid;
  int32_t rssi;
};
#define IOT__SERVICE__GATEWAY__ACTION_OUT_SCAN_SUB_DEVICE__SUB_DEVICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__gateway__action_out_scan_sub_device__sub_device__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


struct  _Iot__Service__Gateway__ActionOutScanSubDevice
{
  ProtobufCMessage base;
  size_t n_subdevice;
  Iot__Service__Gateway__ActionOutScanSubDevice__SubDevice **subdevice;
};
#define IOT__SERVICE__GATEWAY__ACTION_OUT_SCAN_SUB_DEVICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__gateway__action_out_scan_sub_device__descriptor) \
    , 0,NULL }


struct  _Iot__Service__Gateway__ActionInSetupSubDevice
{
  ProtobufCMessage base;
  ProtobufCBinaryData bindkey;
  char *pid;
  /*
   *蓝牙设备为mac的最后4个16进制数字，小写
   *蓝牙mesh设备为uuid
   */
  char *devid;
  /*
   *蓝牙mesh设备为static oob，不是基于pin方式添加时值为空
   */
  ProtobufCBinaryData pin;
  /*
   *不是基于ecdh方式添加时值为空
   */
  ProtobufCBinaryData ecdhpubkey;
};
#define IOT__SERVICE__GATEWAY__ACTION_IN_SETUP_SUB_DEVICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__gateway__action_in_setup_sub_device__descriptor) \
    , {0,NULL}, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, {0,NULL}, {0,NULL} }


typedef enum {
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_SUB_DEVICE__RESP__NOT_SET = 0,
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_SUB_DEVICE__RESP_PROGRESS = 1,
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_SUB_DEVICE__RESP_RESULT = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_SUB_DEVICE__RESP)
} Iot__Service__Gateway__ActionOutSetupSubDevice__RespCase;

struct  _Iot__Service__Gateway__ActionOutSetupSubDevice
{
  ProtobufCMessage base;
  /*
   * 厂商数据
   */
  ProtobufCBinaryData vendordiagnosis;
  Iot__Service__Gateway__ActionOutSetupSubDevice__RespCase resp_case;
  union {
    Iot__Service__Gateway__ActionOutSetupSubDevice__Progress progress;
    Iot__Service__Gateway__ActionOutSetupSubDevice__Result result;
  };
};
#define IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_SUB_DEVICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__gateway__action_out_setup_sub_device__descriptor) \
    , {0,NULL}, IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_SUB_DEVICE__RESP__NOT_SET, {0} }


struct  _Iot__Service__Gateway__NeighborTable
{
  ProtobufCMessage base;
  /*
   *dev Address assigned by misc.
   */
  uint32_t devaddress;
};
#define IOT__SERVICE__GATEWAY__NEIGHBOR_TABLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__gateway__neighbor_table__descriptor) \
    , 0 }


struct  _Iot__Service__Gateway__EventDevDiscovered__DevList
{
  ProtobufCMessage base;
  /*
   * 按以上Capability枚举值进行或运算得到最终的值
   */
  uint32_t capability;
  /*
   * 产品型号ID，pid为空则表示该设备为云云设备
   */
  char *pid;
  Iot__Service__Gateway__EventDevDiscovered__DevList__Status status;
  /*
   * 厂商自定义数据，如果发现的为云云等三方厂商设备，将设备广播的数据完整放这个字段
   */
  ProtobufCBinaryData vendordata;
  /*
   * 随机生成16字节数，用于配网时对称密钥生成的salt
   * 待配网且有二层配网能力时带此字段，否则填空
   * 每次进入配网或配网失败后需要重新生成
   * 如果手机配网后收到新random的设备广播，且没有收到设备的配网错误应答，则表示设备上次配网解密失败
   */
  ProtobufCBinaryData random;
  /*
   * 对于云云对接产品，当上面pid不能表示具体产品型号只能表示厂商时，
   * 通过此字段来表示厂商自定义产品型号标识，并通过在云端配置识别具体型号
   * 格式为“品类&型号”，美的的设备此字段由“品类&SN8&A0”组成
   * 此处设备发出的SN8和A0值必须与开放平台保持一致，当SN8或A0值没有时全填0
   */
  ProtobufCBinaryData vendorpid;
  /*
   *普通设备为完整mac或mac的最后4个16进制数字，小写
   *蓝牙mesh设备为uuid
   */
  char *devid;
  int32_t rssi;
  /*
   * 发现方式
   */
  Iot__Service__Gateway__DiscoveryType type;
};
#define IOT__SERVICE__GATEWAY__EVENT_DEV_DISCOVERED__DEV_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__gateway__event_dev_discovered__dev_list__descriptor) \
    , 0, (char *)protobuf_c_empty_string, IOT__SERVICE__GATEWAY__EVENT_DEV_DISCOVERED__DEV_LIST__STATUS__ALREADY_BIND, {0,NULL}, {0,NULL}, {0,NULL}, (char *)protobuf_c_empty_string, 0, IOT__SERVICE__GATEWAY__DISCOVERY_TYPE__WIFI_TWO }


struct  _Iot__Service__Gateway__EventDevDiscovered
{
  ProtobufCMessage base;
  size_t n_list;
  Iot__Service__Gateway__EventDevDiscovered__DevList **list;
};
#define IOT__SERVICE__GATEWAY__EVENT_DEV_DISCOVERED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__gateway__event_dev_discovered__descriptor) \
    , 0,NULL }


struct  _Iot__Service__Gateway__ActionInSetupDevice
{
  ProtobufCMessage base;
  ProtobufCBinaryData bindkey;
  char *pid;
  /*
   *普通设备为完整mac或mac的最后4个16进制数字，小写
   *蓝牙mesh设备为uuid
   */
  char *devid;
  /*
   * 不是基于pin方式添加时值为空
   */
  ProtobufCBinaryData pin;
  /*
   * 不是基于ecdh方式添加时值为空
   */
  ProtobufCBinaryData ecdhpubkey;
  Iot__Service__Gateway__DiscoveryType type;
};
#define IOT__SERVICE__GATEWAY__ACTION_IN_SETUP_DEVICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__gateway__action_in_setup_device__descriptor) \
    , {0,NULL}, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, {0,NULL}, {0,NULL}, IOT__SERVICE__GATEWAY__DISCOVERY_TYPE__WIFI_TWO }


typedef enum {
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__CODE__NOT_SET = 0,
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__CODE_STATUS = 1,
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__CODE_RESULT = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__CODE)
} Iot__Service__Gateway__ActionOutSetupDevice__CodeCase;

typedef enum {
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__DETAIL__NOT_SET = 0,
  IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__DETAIL_SERVER_REJECTED_CODE = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__DETAIL)
} Iot__Service__Gateway__ActionOutSetupDevice__DetailCase;

struct  _Iot__Service__Gateway__ActionOutSetupDevice
{
  ProtobufCMessage base;
  Iot__Service__Gateway__ActionOutSetupDevice__CodeCase code_case;
  union {
    /*
     * 配置过程
     */
    Iot__Service__Gateway__ActionOutSetupDevice__Status status;
    /*
     * 配置结果
     */
    Iot__Service__Gateway__ActionOutSetupDevice__Result result;
  };
  Iot__Service__Gateway__ActionOutSetupDevice__DetailCase detail_case;
  union {
    /*
     * 被服务器拒绝的错误码
     */
    uint32_t serverrejectedcode;
  };
};
#define IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__gateway__action_out_setup_device__descriptor) \
    , IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__CODE__NOT_SET, {0}, IOT__SERVICE__GATEWAY__ACTION_OUT_SETUP_DEVICE__DETAIL__NOT_SET, {0} }


struct  _Iot__Service__Gateway__Properties
{
  ProtobufCMessage base;
  /*
   * action scanSubDevice(ActionInScanSubDevice) returns (stream ActionOutScanSubDevice) = 1;  //由主动端发起正常结束事务
   * action setupSubDevice(ActionInSetupSubDevice) returns (stream ActionOutSetupSubDevice) = 2;  //由被动端发起正常结束事务
   */
  /*
   * event devDiscovered(EventDevDiscovered) = 4;
   * action setupDevice(ActionInSetupDevice) returns (stream ActionOutSetupDevice) = 5;  //由被动端发起正常结束事务
   */
  size_t n_neighbortable;
  ArrayNode **neighbortable;
};
#define IOT__SERVICE__GATEWAY__PROPERTIES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__gateway__properties__descriptor) \
    , 0,NULL }


/* Iot__Service__Gateway__ActionInScanSubDevice methods */
void   iot__service__gateway__action_in_scan_sub_device__init
                     (Iot__Service__Gateway__ActionInScanSubDevice         *message);
size_t iot__service__gateway__action_in_scan_sub_device__get_packed_size
                     (const Iot__Service__Gateway__ActionInScanSubDevice   *message);
size_t iot__service__gateway__action_in_scan_sub_device__pack
                     (const Iot__Service__Gateway__ActionInScanSubDevice   *message,
                      uint8_t             *out);
size_t iot__service__gateway__action_in_scan_sub_device__pack_to_buffer
                     (const Iot__Service__Gateway__ActionInScanSubDevice   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Gateway__ActionInScanSubDevice *
       iot__service__gateway__action_in_scan_sub_device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__gateway__action_in_scan_sub_device__free_unpacked
                     (Iot__Service__Gateway__ActionInScanSubDevice *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__Gateway__ActionOutScanSubDevice__SubDevice methods */
void   iot__service__gateway__action_out_scan_sub_device__sub_device__init
                     (Iot__Service__Gateway__ActionOutScanSubDevice__SubDevice         *message);
/* Iot__Service__Gateway__ActionOutScanSubDevice methods */
void   iot__service__gateway__action_out_scan_sub_device__init
                     (Iot__Service__Gateway__ActionOutScanSubDevice         *message);
size_t iot__service__gateway__action_out_scan_sub_device__get_packed_size
                     (const Iot__Service__Gateway__ActionOutScanSubDevice   *message);
size_t iot__service__gateway__action_out_scan_sub_device__pack
                     (const Iot__Service__Gateway__ActionOutScanSubDevice   *message,
                      uint8_t             *out);
size_t iot__service__gateway__action_out_scan_sub_device__pack_to_buffer
                     (const Iot__Service__Gateway__ActionOutScanSubDevice   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Gateway__ActionOutScanSubDevice *
       iot__service__gateway__action_out_scan_sub_device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__gateway__action_out_scan_sub_device__free_unpacked
                     (Iot__Service__Gateway__ActionOutScanSubDevice *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__Gateway__ActionInSetupSubDevice methods */
void   iot__service__gateway__action_in_setup_sub_device__init
                     (Iot__Service__Gateway__ActionInSetupSubDevice         *message);
size_t iot__service__gateway__action_in_setup_sub_device__get_packed_size
                     (const Iot__Service__Gateway__ActionInSetupSubDevice   *message);
size_t iot__service__gateway__action_in_setup_sub_device__pack
                     (const Iot__Service__Gateway__ActionInSetupSubDevice   *message,
                      uint8_t             *out);
size_t iot__service__gateway__action_in_setup_sub_device__pack_to_buffer
                     (const Iot__Service__Gateway__ActionInSetupSubDevice   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Gateway__ActionInSetupSubDevice *
       iot__service__gateway__action_in_setup_sub_device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__gateway__action_in_setup_sub_device__free_unpacked
                     (Iot__Service__Gateway__ActionInSetupSubDevice *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__Gateway__ActionOutSetupSubDevice methods */
void   iot__service__gateway__action_out_setup_sub_device__init
                     (Iot__Service__Gateway__ActionOutSetupSubDevice         *message);
size_t iot__service__gateway__action_out_setup_sub_device__get_packed_size
                     (const Iot__Service__Gateway__ActionOutSetupSubDevice   *message);
size_t iot__service__gateway__action_out_setup_sub_device__pack
                     (const Iot__Service__Gateway__ActionOutSetupSubDevice   *message,
                      uint8_t             *out);
size_t iot__service__gateway__action_out_setup_sub_device__pack_to_buffer
                     (const Iot__Service__Gateway__ActionOutSetupSubDevice   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Gateway__ActionOutSetupSubDevice *
       iot__service__gateway__action_out_setup_sub_device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__gateway__action_out_setup_sub_device__free_unpacked
                     (Iot__Service__Gateway__ActionOutSetupSubDevice *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__Gateway__NeighborTable methods */
void   iot__service__gateway__neighbor_table__init
                     (Iot__Service__Gateway__NeighborTable         *message);
size_t iot__service__gateway__neighbor_table__get_packed_size
                     (const Iot__Service__Gateway__NeighborTable   *message);
size_t iot__service__gateway__neighbor_table__pack
                     (const Iot__Service__Gateway__NeighborTable   *message,
                      uint8_t             *out);
size_t iot__service__gateway__neighbor_table__pack_to_buffer
                     (const Iot__Service__Gateway__NeighborTable   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Gateway__NeighborTable *
       iot__service__gateway__neighbor_table__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__gateway__neighbor_table__free_unpacked
                     (Iot__Service__Gateway__NeighborTable *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__Gateway__EventDevDiscovered__DevList methods */
void   iot__service__gateway__event_dev_discovered__dev_list__init
                     (Iot__Service__Gateway__EventDevDiscovered__DevList         *message);
/* Iot__Service__Gateway__EventDevDiscovered methods */
void   iot__service__gateway__event_dev_discovered__init
                     (Iot__Service__Gateway__EventDevDiscovered         *message);
size_t iot__service__gateway__event_dev_discovered__get_packed_size
                     (const Iot__Service__Gateway__EventDevDiscovered   *message);
size_t iot__service__gateway__event_dev_discovered__pack
                     (const Iot__Service__Gateway__EventDevDiscovered   *message,
                      uint8_t             *out);
size_t iot__service__gateway__event_dev_discovered__pack_to_buffer
                     (const Iot__Service__Gateway__EventDevDiscovered   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Gateway__EventDevDiscovered *
       iot__service__gateway__event_dev_discovered__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__gateway__event_dev_discovered__free_unpacked
                     (Iot__Service__Gateway__EventDevDiscovered *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__Gateway__ActionInSetupDevice methods */
void   iot__service__gateway__action_in_setup_device__init
                     (Iot__Service__Gateway__ActionInSetupDevice         *message);
size_t iot__service__gateway__action_in_setup_device__get_packed_size
                     (const Iot__Service__Gateway__ActionInSetupDevice   *message);
size_t iot__service__gateway__action_in_setup_device__pack
                     (const Iot__Service__Gateway__ActionInSetupDevice   *message,
                      uint8_t             *out);
size_t iot__service__gateway__action_in_setup_device__pack_to_buffer
                     (const Iot__Service__Gateway__ActionInSetupDevice   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Gateway__ActionInSetupDevice *
       iot__service__gateway__action_in_setup_device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__gateway__action_in_setup_device__free_unpacked
                     (Iot__Service__Gateway__ActionInSetupDevice *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__Gateway__ActionOutSetupDevice methods */
void   iot__service__gateway__action_out_setup_device__init
                     (Iot__Service__Gateway__ActionOutSetupDevice         *message);
size_t iot__service__gateway__action_out_setup_device__get_packed_size
                     (const Iot__Service__Gateway__ActionOutSetupDevice   *message);
size_t iot__service__gateway__action_out_setup_device__pack
                     (const Iot__Service__Gateway__ActionOutSetupDevice   *message,
                      uint8_t             *out);
size_t iot__service__gateway__action_out_setup_device__pack_to_buffer
                     (const Iot__Service__Gateway__ActionOutSetupDevice   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Gateway__ActionOutSetupDevice *
       iot__service__gateway__action_out_setup_device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__gateway__action_out_setup_device__free_unpacked
                     (Iot__Service__Gateway__ActionOutSetupDevice *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__Gateway__Properties methods */
void   iot__service__gateway__properties__init
                     (Iot__Service__Gateway__Properties         *message);
size_t iot__service__gateway__properties__get_packed_size
                     (const Iot__Service__Gateway__Properties   *message);
size_t iot__service__gateway__properties__pack
                     (const Iot__Service__Gateway__Properties   *message,
                      uint8_t             *out);
size_t iot__service__gateway__properties__pack_to_buffer
                     (const Iot__Service__Gateway__Properties   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__Gateway__Properties *
       iot__service__gateway__properties__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__gateway__properties__free_unpacked
                     (Iot__Service__Gateway__Properties *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Iot__Service__Gateway__ActionInScanSubDevice_Closure)
                 (const Iot__Service__Gateway__ActionInScanSubDevice *message,
                  void *closure_data);
typedef void (*Iot__Service__Gateway__ActionOutScanSubDevice__SubDevice_Closure)
                 (const Iot__Service__Gateway__ActionOutScanSubDevice__SubDevice *message,
                  void *closure_data);
typedef void (*Iot__Service__Gateway__ActionOutScanSubDevice_Closure)
                 (const Iot__Service__Gateway__ActionOutScanSubDevice *message,
                  void *closure_data);
typedef void (*Iot__Service__Gateway__ActionInSetupSubDevice_Closure)
                 (const Iot__Service__Gateway__ActionInSetupSubDevice *message,
                  void *closure_data);
typedef void (*Iot__Service__Gateway__ActionOutSetupSubDevice_Closure)
                 (const Iot__Service__Gateway__ActionOutSetupSubDevice *message,
                  void *closure_data);
typedef void (*Iot__Service__Gateway__NeighborTable_Closure)
                 (const Iot__Service__Gateway__NeighborTable *message,
                  void *closure_data);
typedef void (*Iot__Service__Gateway__EventDevDiscovered__DevList_Closure)
                 (const Iot__Service__Gateway__EventDevDiscovered__DevList *message,
                  void *closure_data);
typedef void (*Iot__Service__Gateway__EventDevDiscovered_Closure)
                 (const Iot__Service__Gateway__EventDevDiscovered *message,
                  void *closure_data);
typedef void (*Iot__Service__Gateway__ActionInSetupDevice_Closure)
                 (const Iot__Service__Gateway__ActionInSetupDevice *message,
                  void *closure_data);
typedef void (*Iot__Service__Gateway__ActionOutSetupDevice_Closure)
                 (const Iot__Service__Gateway__ActionOutSetupDevice *message,
                  void *closure_data);
typedef void (*Iot__Service__Gateway__Properties_Closure)
                 (const Iot__Service__Gateway__Properties *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    iot__service__gateway__discovery_type__descriptor;
extern const ProtobufCMessageDescriptor iot__service__gateway__action_in_scan_sub_device__descriptor;
extern const ProtobufCMessageDescriptor iot__service__gateway__action_out_scan_sub_device__descriptor;
extern const ProtobufCMessageDescriptor iot__service__gateway__action_out_scan_sub_device__sub_device__descriptor;
extern const ProtobufCMessageDescriptor iot__service__gateway__action_in_setup_sub_device__descriptor;
extern const ProtobufCMessageDescriptor iot__service__gateway__action_out_setup_sub_device__descriptor;
extern const ProtobufCEnumDescriptor    iot__service__gateway__action_out_setup_sub_device__progress__descriptor;
extern const ProtobufCEnumDescriptor    iot__service__gateway__action_out_setup_sub_device__result__descriptor;
extern const ProtobufCMessageDescriptor iot__service__gateway__neighbor_table__descriptor;
extern const ProtobufCMessageDescriptor iot__service__gateway__event_dev_discovered__descriptor;
extern const ProtobufCMessageDescriptor iot__service__gateway__event_dev_discovered__dev_list__descriptor;
extern const ProtobufCEnumDescriptor    iot__service__gateway__event_dev_discovered__dev_list__capability__descriptor;
extern const ProtobufCEnumDescriptor    iot__service__gateway__event_dev_discovered__dev_list__status__descriptor;
extern const ProtobufCMessageDescriptor iot__service__gateway__action_in_setup_device__descriptor;
extern const ProtobufCMessageDescriptor iot__service__gateway__action_out_setup_device__descriptor;
extern const ProtobufCEnumDescriptor    iot__service__gateway__action_out_setup_device__status__descriptor;
extern const ProtobufCEnumDescriptor    iot__service__gateway__action_out_setup_device__result__descriptor;
extern const ProtobufCMessageDescriptor iot__service__gateway__properties__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_gateway_2eproto__INCLUDED */

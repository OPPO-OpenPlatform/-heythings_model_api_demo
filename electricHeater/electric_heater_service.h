/* Generated by the heythings model compiler.  DO NOT EDIT! */
/* Generated from: electricHeater.proto */

#ifndef ELECTRIC_HEATER_SERVICE_H
#define ELECTRIC_HEATER_SERVICE_H

#include "hey/types.h"

enum electric_heater_electric_heater_mode {
    ELECTRIC_HEATER_ELECTRIC_HEATER_MODE_NONE = 0,
    ELECTRIC_HEATER_ELECTRIC_HEATER_MODE_SMART_MODE = 1,
    ELECTRIC_HEATER_ELECTRIC_HEATER_MODE_ECO_MODE = 2,
    ELECTRIC_HEATER_ELECTRIC_HEATER_MODE_SLEEP_MODE = 3,
    ELECTRIC_HEATER_ELECTRIC_HEATER_MODE_ANTIFREEZING = 4,
    ELECTRIC_HEATER_ELECTRIC_HEATER_MODE_COMFORT_MODE = 5
};

enum electric_heater_electric_heater_level {
    ELECTRIC_HEATER_ELECTRIC_HEATER_LEVEL_LEVEL_NONE = 0,
    ELECTRIC_HEATER_ELECTRIC_HEATER_LEVEL_LEVEL_ONE = 1,
    ELECTRIC_HEATER_ELECTRIC_HEATER_LEVEL_LEVEL_TWO = 2,
    ELECTRIC_HEATER_ELECTRIC_HEATER_LEVEL_LEVEL_THREE = 3,
    ELECTRIC_HEATER_ELECTRIC_HEATER_LEVEL_LEVEL_FOUR = 4,
    ELECTRIC_HEATER_ELECTRIC_HEATER_LEVEL_LEVEL_FIVE = 5
};

enum ELECTRIC_HEATER_PROPERTY {
    ELECTRIC_HEATER_PROPERTY_POWER = 1,
    ELECTRIC_HEATER_PROPERTY_CURRENTTEMPERATURE = 2,
    ELECTRIC_HEATER_PROPERTY_TARGETTEMPERATURE = 3,
    ELECTRIC_HEATER_PROPERTY_ELECTRICHEATERMODE = 4,
    ELECTRIC_HEATER_PROPERTY_ELECTRICHEATERLEVEL = 5,
    ELECTRIC_HEATER_PROPERTY_CHILDLOCKENABLED = 6,
    ELECTRIC_HEATER_PROPERTY_SCREENDISPLAYENABLED = 7,
    ELECTRIC_HEATER_PROPERTY_RUNNINGDURATION = 8,
    ELECTRIC_HEATER_PROPERTY_POWERCONSUMPTION = 9,
    ELECTRIC_HEATER_PROPERTY_APPOINTMENTPOWERON = 10,
    ELECTRIC_HEATER_PROPERTY_NOCONTROLTEMPENABLED = 11,
    ELECTRIC_HEATER_PROPERTY_APPOINTMENTPOWEROFF = 12
};

struct electric_heater_properties {
    bool power;
    uint32_t currenttemperature;
    uint32_t targettemperature;
    enum electric_heater_electric_heater_mode electricheatermode;
    enum electric_heater_electric_heater_level electricheaterlevel;
    bool childlockenabled;
    bool screendisplayenabled;
    uint32_t runningduration;
    uint32_t powerconsumption;
    uint32_t appointmentpoweron;
    bool nocontroltempenabled;
    uint32_t appointmentpoweroff;
};

/**
 * @brief electric heater service initialization
 * @param properties [electric heater service properties]
 * @return int32_t   [initialize result]
*/
int32_t electric_heater_service_init(const struct electric_heater_properties *properties);

/**
 * @brief data at "struct hey_array_node" pack and unpack
*/
/**
 * @brief properties write callback of electric heater service
 * @param count      [the number of properties will be written]
 * @param enumerate  [the iid enumeration of properties will be written]
 * @param properties [properties structure with written content]
 * @return int32_t   [be writed result, 0 means success]
*/
int32_t electric_heater_properties_write_cb(size_t count, uint32_t *enumerate, struct electric_heater_properties *properties);

/**
 * @brief update properties of electric heater service
 * @param count      [the number of properties to be updated]
 * @param enumerate  [the iid enumeration of properties to be updated]
 * @param properties [properties structure with updated content]
 * @return int32_t   [update result]
 */
int32_t electric_heater_properties_update(size_t count, uint32_t *enumerate, struct electric_heater_properties *properties);

#endif /* ELECTRIC_HEATER_SERVICE_H */

/* Generated by the heythings model compiler.  DO NOT EDIT! */
/* Generated from: tempHumSensor.proto */

#ifndef TEMP_HUM_SENSOR_SERVICE_H
#define TEMP_HUM_SENSOR_SERVICE_H

#include "hey/types.h"

enum TEMP_HUM_SENSOR_PROPERTY {
    TEMP_HUM_SENSOR_PROPERTY_CURRENTTEMPERATURE = 1,
    TEMP_HUM_SENSOR_PROPERTY_CURRENTHUMIDITY = 2,
    TEMP_HUM_SENSOR_PROPERTY_ENTHALPY = 3
};

struct temp_hum_sensor_properties {
    int32_t currenttemperature;
    uint32_t currenthumidity;
    uint32_t enthalpy;
};

/**
 * @brief temp hum sensor service initialization
 * @param properties [temp hum sensor service properties]
 * @return int32_t   [initialize result]
*/
int32_t temp_hum_sensor_service_init(const struct temp_hum_sensor_properties *properties);

/**
 * @brief data at "struct hey_array_node" pack and unpack
*/
/**
 * @brief properties write callback of temp hum sensor service
 * @param count      [the number of properties will be written]
 * @param enumerate  [the iid enumeration of properties will be written]
 * @param properties [properties structure with written content]
 * @return int32_t   [be writed result, 0 means success]
*/
int32_t temp_hum_sensor_properties_write_cb(size_t count, uint32_t *enumerate, struct temp_hum_sensor_properties *properties);

/**
 * @brief update properties of temp hum sensor service
 * @param count      [the number of properties to be updated]
 * @param enumerate  [the iid enumeration of properties to be updated]
 * @param properties [properties structure with updated content]
 * @return int32_t   [update result]
 */
int32_t temp_hum_sensor_properties_update(size_t count, uint32_t *enumerate, struct temp_hum_sensor_properties *properties);

#endif /* TEMP_HUM_SENSOR_SERVICE_H */

/* Generated by the heythings model compiler.  DO NOT EDIT! */
/* Generated from: waterSensor.proto */

#ifndef WATER_SENSOR_SERVICE_H
#define WATER_SENSOR_SERVICE_H

#include "hey/types.h"

struct water_sensor_event_water_detected {
    char __place_holder__; // make compiler happy
};

struct water_sensor_event_no_water {
    char __place_holder__; // make compiler happy
};

enum WATER_SENSOR_PROPERTY {
    WATER_SENSOR_PROPERTY_ALARMSTATE = 1
};

enum WATER_SENSOR_EVENT {
    WATER_SENSOR_EVENT_WATER_DETECTED = 2,
    WATER_SENSOR_EVENT_NO_WATER = 3
};

struct water_sensor_properties {
    bool alarmstate;
};

/**
 * @brief water sensor service initialization
 * @param properties [water sensor service properties]
 * @return int32_t   [initialize result]
*/
int32_t water_sensor_service_init(const struct water_sensor_properties *properties);

/**
 * @brief data at "struct hey_array_node" pack and unpack
*/
/**
 * @brief properties write callback of water sensor service
 * @param count      [the number of properties will be written]
 * @param enumerate  [the iid enumeration of properties will be written]
 * @param properties [properties structure with written content]
 * @return int32_t   [be writed result, 0 means success]
*/
int32_t water_sensor_properties_write_cb(size_t count, uint32_t *enumerate, struct water_sensor_properties *properties);

/**
 * @brief update properties of water sensor service
 * @param count      [the number of properties to be updated]
 * @param enumerate  [the iid enumeration of properties to be updated]
 * @param properties [properties structure with updated content]
 * @return int32_t   [update result]
 */
int32_t water_sensor_properties_update(size_t count, uint32_t *enumerate, struct water_sensor_properties *properties);

/**
 * @brief water detected notify of water sensor service
 * @param event    [event content]
 * @param attr     [event details]
 * @return int64_t [event uuid, get error code from errno when return negative value]
*/
int64_t water_sensor_water_detected_notify(struct water_sensor_event_water_detected *event, struct hey_event_notify_attr *attr);

/**
 * @brief water detected notify result callback of water sensor service
 * @param ctx    [registered callback context by user]
 * @param result [the result of notify, 0 means success]
 * @return none
*/
void water_sensor_water_detected_notify_result_cb(struct hey_job_ctx *ctx, int32_t result);

/**
 * @brief no water notify of water sensor service
 * @param event    [event content]
 * @param attr     [event details]
 * @return int64_t [event uuid, get error code from errno when return negative value]
*/
int64_t water_sensor_no_water_notify(struct water_sensor_event_no_water *event, struct hey_event_notify_attr *attr);

/**
 * @brief no water notify result callback of water sensor service
 * @param ctx    [registered callback context by user]
 * @param result [the result of notify, 0 means success]
 * @return none
*/
void water_sensor_no_water_notify_result_cb(struct hey_job_ctx *ctx, int32_t result);

#endif /* WATER_SENSOR_SERVICE_H */

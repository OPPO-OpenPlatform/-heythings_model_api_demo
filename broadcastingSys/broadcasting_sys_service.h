/* Generated by the heythings model compiler.  DO NOT EDIT! */
/* Generated from: broadcastingSys.proto */

#ifndef BROADCASTING_SYS_SERVICE_H
#define BROADCASTING_SYS_SERVICE_H

#include "hey/types.h"

enum BROADCASTING_SYS_PROPERTY {
    BROADCASTING_SYS_PROPERTY_POWER = 1,
    BROADCASTING_SYS_PROPERTY_ALARMSTATE = 2
};

struct broadcasting_sys_properties {
    bool power;
    bool alarmstate;
};

/**
 * @brief broadcasting sys service initialization
 * @param properties [broadcasting sys service properties]
 * @return int32_t   [initialize result]
*/
int32_t broadcasting_sys_service_init(const struct broadcasting_sys_properties *properties);

/**
 * @brief data at "struct hey_array_node" pack and unpack
*/
/**
 * @brief properties write callback of broadcasting sys service
 * @param count      [the number of properties will be written]
 * @param enumerate  [the iid enumeration of properties will be written]
 * @param properties [properties structure with written content]
 * @return int32_t   [be writed result, 0 means success]
*/
int32_t broadcasting_sys_properties_write_cb(size_t count, uint32_t *enumerate, struct broadcasting_sys_properties *properties);

/**
 * @brief update properties of broadcasting sys service
 * @param count      [the number of properties to be updated]
 * @param enumerate  [the iid enumeration of properties to be updated]
 * @param properties [properties structure with updated content]
 * @return int32_t   [update result]
 */
int32_t broadcasting_sys_properties_update(size_t count, uint32_t *enumerate, struct broadcasting_sys_properties *properties);

#endif /* BROADCASTING_SYS_SERVICE_H */

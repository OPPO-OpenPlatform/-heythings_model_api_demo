/* Generated by the heythings model compiler.  DO NOT EDIT! */
/* Generated from: airQuality.proto */

#ifndef AIR_QUALITY_SERVICE_H
#define AIR_QUALITY_SERVICE_H

#include "hey/types.h"

enum air_quality_level {
    AIR_QUALITY_LEVEL_LEVEL_1 = 0,
    AIR_QUALITY_LEVEL_LEVEL_2 = 1,
    AIR_QUALITY_LEVEL_LEVEL_3 = 2,
    AIR_QUALITY_LEVEL_LEVEL_4 = 3,
    AIR_QUALITY_LEVEL_LEVEL_5 = 4
};

enum AIR_QUALITY_PROPERTY {
    AIR_QUALITY_PROPERTY_PM1 = 1,
    AIR_QUALITY_PROPERTY_PM2 = 2,
    AIR_QUALITY_PROPERTY_PM10 = 3,
    AIR_QUALITY_PROPERTY_CO2 = 4,
    AIR_QUALITY_PROPERTY_CO = 5,
    AIR_QUALITY_PROPERTY_CH20 = 6,
    AIR_QUALITY_PROPERTY_VOC = 7,
    AIR_QUALITY_PROPERTY_CURRENTHUMIDITY = 8,
    AIR_QUALITY_PROPERTY_ASHTVOC = 9,
    AIR_QUALITY_PROPERTY_SMELLTVOC = 10,
    AIR_QUALITY_PROPERTY_MONITORINGENABLED = 11,
    AIR_QUALITY_PROPERTY_AIRQUALITYLEVEL = 12
};

struct air_quality_properties {
    uint32_t pm1;
    uint32_t pm2;
    uint32_t pm10;
    uint32_t co2;
    uint32_t co;
    uint32_t ch20;
    uint32_t voc;
    uint32_t currenthumidity;
    enum air_quality_level ashtvoc;
    enum air_quality_level smelltvoc;
    bool monitoringenabled;
    enum air_quality_level airqualitylevel;
};

/**
 * @brief air quality service initialization
 * @param properties [air quality service properties]
 * @return int32_t   [initialize result]
*/
int32_t air_quality_service_init(const struct air_quality_properties *properties);

/**
 * @brief data at "struct hey_array_node" pack and unpack
*/
/**
 * @brief properties write callback of air quality service
 * @param count      [the number of properties will be written]
 * @param enumerate  [the iid enumeration of properties will be written]
 * @param properties [properties structure with written content]
 * @return int32_t   [be writed result, 0 means success]
*/
int32_t air_quality_properties_write_cb(size_t count, uint32_t *enumerate, struct air_quality_properties *properties);

/**
 * @brief update properties of air quality service
 * @param count      [the number of properties to be updated]
 * @param enumerate  [the iid enumeration of properties to be updated]
 * @param properties [properties structure with updated content]
 * @return int32_t   [update result]
 */
int32_t air_quality_properties_update(size_t count, uint32_t *enumerate, struct air_quality_properties *properties);

#endif /* AIR_QUALITY_SERVICE_H */

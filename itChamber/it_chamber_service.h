/* Generated by the heythings model compiler.  DO NOT EDIT! */
/* Generated from: itChamber.proto */

#ifndef IT_CHAMBER_SERVICE_H
#define IT_CHAMBER_SERVICE_H

#include "hey/types.h"

enum it_chamber_it_chamber_level {
    IT_CHAMBER_IT_CHAMBER_LEVEL_SOFT_FREEZING = 0,
    IT_CHAMBER_IT_CHAMBER_LEVEL_ZERO_PRESERVATION = 1,
    IT_CHAMBER_IT_CHAMBER_LEVEL_COLE_DRINK = 2,
    IT_CHAMBER_IT_CHAMBER_LEVEL_FRUIT = 3,
    IT_CHAMBER_IT_CHAMBER_LEVEL_SLIGHT_FREEZING = 4,
    IT_CHAMBER_IT_CHAMBER_LEVEL_DRY_AREA = 5,
    IT_CHAMBER_IT_CHAMBER_LEVEL_ICE_TEMP = 6
};

enum IT_CHAMBER_PROPERTY {
    IT_CHAMBER_PROPERTY_POWER = 1,
    IT_CHAMBER_PROPERTY_DEVLABLE = 2,
    IT_CHAMBER_PROPERTY_CURRENTTEMPERATURE = 3,
    IT_CHAMBER_PROPERTY_TARGETTEMPERATURE = 4,
    IT_CHAMBER_PROPERTY_ITCHAMBERLEVEL = 5
};

struct it_chamber_properties {
    bool power;
    char *devlable;
    int32_t currenttemperature;
    int32_t targettemperature;
    enum it_chamber_it_chamber_level itchamberlevel;
};

/**
 * @brief it chamber service initialization
 * @param properties [it chamber service properties]
 * @return int32_t   [initialize result]
*/
int32_t it_chamber_service_init(const struct it_chamber_properties *properties);

/**
 * @brief data at "struct hey_array_node" pack and unpack
*/
/**
 * @brief properties write callback of it chamber service
 * @param count      [the number of properties will be written]
 * @param enumerate  [the iid enumeration of properties will be written]
 * @param properties [properties structure with written content]
 * @return int32_t   [be writed result, 0 means success]
*/
int32_t it_chamber_properties_write_cb(size_t count, uint32_t *enumerate, struct it_chamber_properties *properties);

/**
 * @brief update properties of it chamber service
 * @param count      [the number of properties to be updated]
 * @param enumerate  [the iid enumeration of properties to be updated]
 * @param properties [properties structure with updated content]
 * @return int32_t   [update result]
 */
int32_t it_chamber_properties_update(size_t count, uint32_t *enumerate, struct it_chamber_properties *properties);

#endif /* IT_CHAMBER_SERVICE_H */

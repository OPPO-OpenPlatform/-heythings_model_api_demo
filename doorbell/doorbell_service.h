/* Generated by the heythings model compiler.  DO NOT EDIT! */
/* Generated from: doorbell.proto */

#ifndef DOORBELL_SERVICE_H
#define DOORBELL_SERVICE_H

#include "hey/types.h"

enum auto_reply_source {
    AUTO_REPLY_SOURCE_SYS = 0,
    AUTO_REPLY_SOURCE_USER = 1
};

enum event_motion_detection_start_result_type {
    EVENT_MOTION_DETECTION_START_RESULT_TYPE_PICTURE_CHANGE = 0,
    EVENT_MOTION_DETECTION_START_RESULT_TYPE_STAYING_DOORWAY = 1,
    EVENT_MOTION_DETECTION_START_RESULT_TYPE_PASSING_BY_DOOR = 2,
    EVENT_MOTION_DETECTION_START_RESULT_TYPE_HUMAN_MOTION = 3,
    EVENT_MOTION_DETECTION_START_RESULT_TYPE_ANIMAL_MOTION = 4,
    EVENT_MOTION_DETECTION_START_RESULT_TYPE_CAT_MOTION = 5,
    EVENT_MOTION_DETECTION_START_RESULT_TYPE_DOG_MOTION = 6
};

enum event_motion_detection_end_result_type {
    EVENT_MOTION_DETECTION_END_RESULT_TYPE_PICTURE_CHANGE = 0,
    EVENT_MOTION_DETECTION_END_RESULT_TYPE_STAYING_DOORWAY = 1,
    EVENT_MOTION_DETECTION_END_RESULT_TYPE_PASSING_BY_DOOR = 2,
    EVENT_MOTION_DETECTION_END_RESULT_TYPE_HUMAN_MOTION = 3,
    EVENT_MOTION_DETECTION_END_RESULT_TYPE_ANIMAL_MOTION = 4,
    EVENT_MOTION_DETECTION_END_RESULT_TYPE_CAT_MOTION = 5,
    EVENT_MOTION_DETECTION_END_RESULT_TYPE_DOG_MOTION = 6
};

enum doorbell_voice_changer_mode {
    DOORBELL_VOICE_CHANGER_MODE_ORIGIN_SOUND = 0,
    DOORBELL_VOICE_CHANGER_MODE_UNCLE_SOUND = 1,
    DOORBELL_VOICE_CHANGER_MODE_CLOWN_SOUND = 2
};

enum doorbell_predefined_resolution {
    DOORBELL_PREDEFINED_RESOLUTION_R_AUTO = 0,
    DOORBELL_PREDEFINED_RESOLUTION_R360P = 1,
    DOORBELL_PREDEFINED_RESOLUTION_R720P = 2,
    DOORBELL_PREDEFINED_RESOLUTION_R1080P = 3,
    DOORBELL_PREDEFINED_RESOLUTION_R1280P = 4,
    DOORBELL_PREDEFINED_RESOLUTION_R1296P = 5
};

enum doorbell_motion_detection_distance {
    DOORBELL_MOTION_DETECTION_DISTANCE_D_AUTO = 0,
    DOORBELL_MOTION_DETECTION_DISTANCE_NEAR = 1,
    DOORBELL_MOTION_DETECTION_DISTANCE_MIDDLE = 2,
    DOORBELL_MOTION_DETECTION_DISTANCE_DISTANT = 3
};

enum doorbell_ringing_sound {
    DOORBELL_RINGING_SOUND_SILENT = 0,
    DOORBELL_RINGING_SOUND_RING1 = 1,
    DOORBELL_RINGING_SOUND_RING2 = 2
};

struct doorbell_auto_reply_working_period {
    uint32_t week;
    uint32_t fromhour;
    uint32_t frommin;
    uint32_t tohour;
    uint32_t tomin;
};

struct doorbell_leaving_words_working_period {
    uint32_t week;
    uint32_t fromhour;
    uint32_t frommin;
    uint32_t tohour;
    uint32_t tomin;
};

struct doorbell_no_disturbing_period {
    uint32_t week;
    uint32_t fromhour;
    uint32_t frommin;
    uint32_t tohour;
    uint32_t tomin;
};

struct doorbell_motion_detection_working_period {
    uint32_t week;
    uint32_t fromhour;
    uint32_t frommin;
    uint32_t tohour;
    uint32_t tomin;
};

struct doorbell_push_motion_detect_period {
    uint32_t week;
    uint32_t fromhour;
    uint32_t frommin;
    uint32_t tohour;
    uint32_t tomin;
};

struct doorbell_push_standing_in_doorway_period {
    uint32_t week;
    uint32_t fromhour;
    uint32_t frommin;
    uint32_t tohour;
    uint32_t tomin;
};

struct doorbell_push_passing_by_door_period {
    uint32_t week;
    uint32_t fromhour;
    uint32_t frommin;
    uint32_t tohour;
    uint32_t tomin;
};

struct doorbell_push_doorbell_ringing_period {
    uint32_t week;
    uint32_t fromhour;
    uint32_t frommin;
    uint32_t tohour;
    uint32_t tomin;
};

struct doorbell_push_leaving_words_period {
    uint32_t week;
    uint32_t fromhour;
    uint32_t frommin;
    uint32_t tohour;
    uint32_t tomin;
};

struct doorbell_leave_word {
    char *url;
    bool status;
    uint64_t time;
    bool autodeleteenabled;
};

struct doorbell_auto_reply {
    char *url;
    bool status;
    enum auto_reply_source source;
};

struct doorbell_event_doorbell_ringing {
    char *recordurl;
    char *thumbnaiurl;
};

struct doorbell_event_motion_detection_start {
    uint64_t eventstarttime;
    enum event_motion_detection_start_result_type resulttype;
    bool uploadvideoenable;
};

struct doorbell_event_motion_detection_end {
    uint64_t eventendtime;
    enum event_motion_detection_end_result_type resulttype;
};

struct doorbell_event_leaving_words {
    char *recordurl;
    char *thumbnaiurl;
};

struct doorbell_event_antiprying_alarm {
    char *recordurl;
    char *thumbnaiurl;
};

enum DOORBELL_PROPERTY {
    DOORBELL_PROPERTY_POWER = 1,
    DOORBELL_PROPERTY_VOICECHANGERMODE = 2,
    DOORBELL_PROPERTY_MUTE = 3,
    DOORBELL_PROPERTY_SOUNDVOLUME = 4,
    DOORBELL_PROPERTY_RESOLUTION = 5,
    DOORBELL_PROPERTY_MOTIONDETECTIONENABLED = 6,
    DOORBELL_PROPERTY_MOTIONDETECTIONDISTANCE = 7,
    DOORBELL_PROPERTY_MOTIONDETECTIONRECORDDURATION = 8,
    DOORBELL_PROPERTY_ANTIPRYINGALARMENABLED = 9,
    DOORBELL_PROPERTY_AUTOREPLYENABLED = 10,
    DOORBELL_PROPERTY_AUTOREPLYWORKINGPERIOD = 11,
    DOORBELL_PROPERTY_LEAVINGWORDSENABLED = 12,
    DOORBELL_PROPERTY_LEAVINGWORDSWORKINGPERIOD = 13,
    DOORBELL_PROPERTY_RINGINGSOUND = 14,
    DOORBELL_PROPERTY_NODISTURBINGENABLED = 15,
    DOORBELL_PROPERTY_NODISTURBINGPERIOD = 16,
    DOORBELL_PROPERTY_PUSHDOORBELLRINGINGENABLED = 17,
    DOORBELL_PROPERTY_PUSHPASSINGBYDOORENABLED = 18,
    DOORBELL_PROPERTY_PUSHSTANDINGINDOORWAYENABLED = 19,
    DOORBELL_PROPERTY_PUSHMOTIONDETECTIONENABLED = 20,
    DOORBELL_PROPERTY_PUSHLEAVINGWORDSENABLED = 21,
    DOORBELL_PROPERTY_PUSHDOORBELLRINGINGSILENTTIME = 22,
    DOORBELL_PROPERTY_PUSHANTIPRYINGALARMSILENTTIME = 23,
    DOORBELL_PROPERTY_PUSHPASSINGBYDOORSILENTTIME = 24,
    DOORBELL_PROPERTY_PUSHSTANDINGINDOORWAYSILENTTIME = 25,
    DOORBELL_PROPERTY_PUSHMOTIONDETECTIONSILENTTIME = 26,
    DOORBELL_PROPERTY_PUSHLEAVINGWORDSSILENTTIME = 27,
    DOORBELL_PROPERTY_NIGHTVISIONENABLED = 28,
    DOORBELL_PROPERTY_MOTIONDETECTIONWORKINGPERIOD = 29,
    DOORBELL_PROPERTY_PUSHMOTIONDETECTPERIOD = 30,
    DOORBELL_PROPERTY_PUSHSTANDINGINDOORWAYPERIOD = 31,
    DOORBELL_PROPERTY_PUSHPASSINGBYDOORPERIOD = 32,
    DOORBELL_PROPERTY_PUSHDOORBELLRINGINGPERIOD = 33,
    DOORBELL_PROPERTY_PUSHLEAVINGWORDSPERIOD = 34,
    DOORBELL_PROPERTY_LEAVEWORD = 35,
    DOORBELL_PROPERTY_AUTOREPLY = 36,
    DOORBELL_PROPERTY_PASSINGBYDOORTHRESHOLD = 37
};

enum DOORBELL_EVENT {
    DOORBELL_EVENT_DOORBELL_RINGING = 38,
    DOORBELL_EVENT_ANTIPRYING_ALARM = 39,
    DOORBELL_EVENT_MOTION_DETECTION_START = 40,
    DOORBELL_EVENT_LEAVING_WORDS = 41,
    DOORBELL_EVENT_MOTION_DETECTION_END = 42
};

struct doorbell_properties {
    bool power;
    enum doorbell_voice_changer_mode voicechangermode;
    bool mute;
    uint32_t soundvolume;
    enum doorbell_predefined_resolution resolution;
    bool motiondetectionenabled;
    enum doorbell_motion_detection_distance motiondetectiondistance;
    uint32_t motiondetectionrecordduration;
    bool antipryingalarmenabled;
    bool autoreplyenabled;
    struct doorbell_auto_reply_working_period *autoreplyworkingperiod;
    bool leavingwordsenabled;
    struct doorbell_leaving_words_working_period *leavingwordsworkingperiod;
    enum doorbell_ringing_sound ringingsound;
    bool nodisturbingenabled;
    struct doorbell_no_disturbing_period *nodisturbingperiod;
    bool pushdoorbellringingenabled;
    bool pushpassingbydoorenabled;
    bool pushstandingindoorwayenabled;
    bool pushmotiondetectionenabled;
    bool pushleavingwordsenabled;
    uint32_t pushdoorbellringingsilenttime;
    uint32_t pushantipryingalarmsilenttime;
    uint32_t pushpassingbydoorsilenttime;
    uint32_t pushstandingindoorwaysilenttime;
    uint32_t pushmotiondetectionsilenttime;
    uint32_t pushleavingwordssilenttime;
    bool nightvisionenabled;
    struct doorbell_motion_detection_working_period *motiondetectionworkingperiod;
    struct doorbell_push_motion_detect_period *pushmotiondetectperiod;
    struct doorbell_push_standing_in_doorway_period *pushstandingindoorwayperiod;
    struct doorbell_push_passing_by_door_period *pushpassingbydoorperiod;
    struct doorbell_push_doorbell_ringing_period *pushdoorbellringingperiod;
    struct doorbell_push_leaving_words_period *pushleavingwordsperiod;
    size_t n_leaveword;
    struct hey_array_node **leaveword;
    size_t n_autoreply;
    struct hey_array_node **autoreply;
    uint32_t passingbydoorthreshold;
};

/**
 * @brief doorbell service initialization
 * @param properties [doorbell service properties]
 * @return int32_t   [initialize result]
*/
int32_t doorbell_service_init(const struct doorbell_properties *properties);

/**
 * @brief data at "struct hey_array_node" pack and unpack
*/
struct doorbell_leave_word *doorbell_leave_word_unpack(const uint8_t *data, size_t len);
void doorbell_leave_word_free_unpacked(struct doorbell_leave_word *data);
// less than 0 means failure
int32_t doorbell_leave_word_get_packed_size(const struct doorbell_leave_word *data);
// less than 0 means failure
int32_t doorbell_leave_word_pack(const struct doorbell_leave_word *data, uint8_t *out);

struct doorbell_auto_reply *doorbell_auto_reply_unpack(const uint8_t *data, size_t len);
void doorbell_auto_reply_free_unpacked(struct doorbell_auto_reply *data);
// less than 0 means failure
int32_t doorbell_auto_reply_get_packed_size(const struct doorbell_auto_reply *data);
// less than 0 means failure
int32_t doorbell_auto_reply_pack(const struct doorbell_auto_reply *data, uint8_t *out);

/**
 * @brief properties write callback of doorbell service
 * @param count      [the number of properties will be written]
 * @param enumerate  [the iid enumeration of properties will be written]
 * @param properties [properties structure with written content]
 * @return int32_t   [be writed result, 0 means success]
*/
int32_t doorbell_properties_write_cb(size_t count, uint32_t *enumerate, struct doorbell_properties *properties);

/**
 * @brief arrayNode properties add callback of doorbell service
 * @param len      [array data length]
 * @param value    [array data]
 * @return int32_t [return array id, 0 or more than 0 means success]
*/
int32_t doorbell_leaveword_array_add_cb(size_t len, uint8_t *value);

/**
 * @brief arrayNode properties delete callback of doorbell service
 * @param n_id     [nums of id that will be removed]
 * @param ids      [list of ids that will be removed]
 * @return int32_t [0 means success]
*/
int32_t doorbell_leaveword_array_del_cb(size_t n_id, uint32_t *ids);

/**
 * @brief arrayNode properties replace callback of doorbell service
 * @param id       [array id that will be replaced]
 * @param len      [array data length]
 * @param value    [array data]
 * @return int32_t [0 means success]
*/
int32_t doorbell_leaveword_array_replace_cb(uint32_t id, size_t len, uint8_t *value);

/**
 * @brief arrayNode properties add callback of doorbell service
 * @param len      [array data length]
 * @param value    [array data]
 * @return int32_t [return array id, 0 or more than 0 means success]
*/
int32_t doorbell_autoreply_array_add_cb(size_t len, uint8_t *value);

/**
 * @brief arrayNode properties delete callback of doorbell service
 * @param n_id     [nums of id that will be removed]
 * @param ids      [list of ids that will be removed]
 * @return int32_t [0 means success]
*/
int32_t doorbell_autoreply_array_del_cb(size_t n_id, uint32_t *ids);

/**
 * @brief arrayNode properties replace callback of doorbell service
 * @param id       [array id that will be replaced]
 * @param len      [array data length]
 * @param value    [array data]
 * @return int32_t [0 means success]
*/
int32_t doorbell_autoreply_array_replace_cb(uint32_t id, size_t len, uint8_t *value);

/**
 * @brief update properties of doorbell service
 * @param count      [the number of properties to be updated]
 * @param enumerate  [the iid enumeration of properties to be updated]
 * @param properties [properties structure with updated content]
 * @return int32_t   [update result]
 */
int32_t doorbell_properties_update(size_t count, uint32_t *enumerate, struct doorbell_properties *properties);

/**
 * @brief doorbell ringing notify of doorbell service
 * @param event    [event content]
 * @param attr     [event details]
 * @return int64_t [event uuid, get error code from errno when return negative value]
*/
int64_t doorbell_doorbell_ringing_notify(struct doorbell_event_doorbell_ringing *event, struct hey_event_notify_attr *attr);

/**
 * @brief doorbell ringing notify result callback of doorbell service
 * @param ctx    [registered callback context by user]
 * @param result [the result of notify, 0 means success]
 * @return none
*/
void doorbell_doorbell_ringing_notify_result_cb(struct hey_job_ctx *ctx, int32_t result);

/**
 * @brief antiprying alarm notify of doorbell service
 * @param event    [event content]
 * @param attr     [event details]
 * @return int64_t [event uuid, get error code from errno when return negative value]
*/
int64_t doorbell_antiprying_alarm_notify(struct doorbell_event_antiprying_alarm *event, struct hey_event_notify_attr *attr);

/**
 * @brief antiprying alarm notify result callback of doorbell service
 * @param ctx    [registered callback context by user]
 * @param result [the result of notify, 0 means success]
 * @return none
*/
void doorbell_antiprying_alarm_notify_result_cb(struct hey_job_ctx *ctx, int32_t result);

/**
 * @brief motion detection start notify of doorbell service
 * @param event    [event content]
 * @param attr     [event details]
 * @return int64_t [event uuid, get error code from errno when return negative value]
*/
int64_t doorbell_motion_detection_start_notify(struct doorbell_event_motion_detection_start *event, struct hey_event_notify_attr *attr);

/**
 * @brief motion detection start notify result callback of doorbell service
 * @param ctx    [registered callback context by user]
 * @param result [the result of notify, 0 means success]
 * @return none
*/
void doorbell_motion_detection_start_notify_result_cb(struct hey_job_ctx *ctx, int32_t result);

/**
 * @brief leaving words notify of doorbell service
 * @param event    [event content]
 * @param attr     [event details]
 * @return int64_t [event uuid, get error code from errno when return negative value]
*/
int64_t doorbell_leaving_words_notify(struct doorbell_event_leaving_words *event, struct hey_event_notify_attr *attr);

/**
 * @brief leaving words notify result callback of doorbell service
 * @param ctx    [registered callback context by user]
 * @param result [the result of notify, 0 means success]
 * @return none
*/
void doorbell_leaving_words_notify_result_cb(struct hey_job_ctx *ctx, int32_t result);

/**
 * @brief motion detection end notify of doorbell service
 * @param event    [event content]
 * @param attr     [event details]
 * @return int64_t [event uuid, get error code from errno when return negative value]
*/
int64_t doorbell_motion_detection_end_notify(struct doorbell_event_motion_detection_end *event, struct hey_event_notify_attr *attr);

/**
 * @brief motion detection end notify result callback of doorbell service
 * @param ctx    [registered callback context by user]
 * @param result [the result of notify, 0 means success]
 * @return none
*/
void doorbell_motion_detection_end_notify_result_cb(struct hey_job_ctx *ctx, int32_t result);

#endif /* DOORBELL_SERVICE_H */

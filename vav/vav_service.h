/* Generated by the heythings model compiler.  DO NOT EDIT! */
/* Generated from: vav.proto */

#ifndef VAV_SERVICE_H
#define VAV_SERVICE_H

#include "hey/types.h"

enum VAV_PROPERTY {
    VAV_PROPERTY_PRESSUREDIFFSTA = 1,
    VAV_PROPERTY_CURRENTTEMPERATURE = 2,
    VAV_PROPERTY_CO2 = 3,
    VAV_PROPERTY_AIRFLOWRATE = 4,
    VAV_PROPERTY_MAXAIRFLOWRATE = 5
};

struct vav_properties {
    bool pressurediffsta;
    uint32_t currenttemperature;
    uint32_t co2;
    uint32_t airflowrate;
    uint32_t maxairflowrate;
};

/**
 * @brief vav service initialization
 * @param properties [vav service properties]
 * @return int32_t   [initialize result]
*/
int32_t vav_service_init(const struct vav_properties *properties);

/**
 * @brief data at "struct hey_array_node" pack and unpack
*/
/**
 * @brief properties write callback of vav service
 * @param count      [the number of properties will be written]
 * @param enumerate  [the iid enumeration of properties will be written]
 * @param properties [properties structure with written content]
 * @return int32_t   [be writed result, 0 means success]
*/
int32_t vav_properties_write_cb(size_t count, uint32_t *enumerate, struct vav_properties *properties);

/**
 * @brief update properties of vav service
 * @param count      [the number of properties to be updated]
 * @param enumerate  [the iid enumeration of properties to be updated]
 * @param properties [properties structure with updated content]
 * @return int32_t   [update result]
 */
int32_t vav_properties_update(size_t count, uint32_t *enumerate, struct vav_properties *properties);

#endif /* VAV_SERVICE_H */

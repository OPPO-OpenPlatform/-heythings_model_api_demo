/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: smokeSensor.proto */

#ifndef PROTOBUF_C_smokeSensor_2eproto__INCLUDED
#define PROTOBUF_C_smokeSensor_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Iot__Service__SmokeSensor__EventSmokeDetected Iot__Service__SmokeSensor__EventSmokeDetected;
typedef struct _Iot__Service__SmokeSensor__EventNoSmoke Iot__Service__SmokeSensor__EventNoSmoke;
typedef struct _Iot__Service__SmokeSensor__Properties Iot__Service__SmokeSensor__Properties;


/* --- enums --- */


/* --- messages --- */

struct  _Iot__Service__SmokeSensor__EventSmokeDetected
{
  ProtobufCMessage base;
};
#define IOT__SERVICE__SMOKE_SENSOR__EVENT_SMOKE_DETECTED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__smoke_sensor__event_smoke_detected__descriptor) \
     }


struct  _Iot__Service__SmokeSensor__EventNoSmoke
{
  ProtobufCMessage base;
};
#define IOT__SERVICE__SMOKE_SENSOR__EVENT_NO_SMOKE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__smoke_sensor__event_no_smoke__descriptor) \
     }


struct  _Iot__Service__SmokeSensor__Properties
{
  ProtobufCMessage base;
  uint32_t smokeconcentration;
  protobuf_c_boolean alarmstate;
  /*
   * event smokeDetected(EventSmokeDetected) = 4;
   * event noSmoke(EventNoSmoke) = 5;
   */
  uint32_t smokethreshold;
};
#define IOT__SERVICE__SMOKE_SENSOR__PROPERTIES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&iot__service__smoke_sensor__properties__descriptor) \
    , 0, 0, 0 }


/* Iot__Service__SmokeSensor__EventSmokeDetected methods */
void   iot__service__smoke_sensor__event_smoke_detected__init
                     (Iot__Service__SmokeSensor__EventSmokeDetected         *message);
size_t iot__service__smoke_sensor__event_smoke_detected__get_packed_size
                     (const Iot__Service__SmokeSensor__EventSmokeDetected   *message);
size_t iot__service__smoke_sensor__event_smoke_detected__pack
                     (const Iot__Service__SmokeSensor__EventSmokeDetected   *message,
                      uint8_t             *out);
size_t iot__service__smoke_sensor__event_smoke_detected__pack_to_buffer
                     (const Iot__Service__SmokeSensor__EventSmokeDetected   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__SmokeSensor__EventSmokeDetected *
       iot__service__smoke_sensor__event_smoke_detected__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__smoke_sensor__event_smoke_detected__free_unpacked
                     (Iot__Service__SmokeSensor__EventSmokeDetected *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__SmokeSensor__EventNoSmoke methods */
void   iot__service__smoke_sensor__event_no_smoke__init
                     (Iot__Service__SmokeSensor__EventNoSmoke         *message);
size_t iot__service__smoke_sensor__event_no_smoke__get_packed_size
                     (const Iot__Service__SmokeSensor__EventNoSmoke   *message);
size_t iot__service__smoke_sensor__event_no_smoke__pack
                     (const Iot__Service__SmokeSensor__EventNoSmoke   *message,
                      uint8_t             *out);
size_t iot__service__smoke_sensor__event_no_smoke__pack_to_buffer
                     (const Iot__Service__SmokeSensor__EventNoSmoke   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__SmokeSensor__EventNoSmoke *
       iot__service__smoke_sensor__event_no_smoke__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__smoke_sensor__event_no_smoke__free_unpacked
                     (Iot__Service__SmokeSensor__EventNoSmoke *message,
                      ProtobufCAllocator *allocator);
/* Iot__Service__SmokeSensor__Properties methods */
void   iot__service__smoke_sensor__properties__init
                     (Iot__Service__SmokeSensor__Properties         *message);
size_t iot__service__smoke_sensor__properties__get_packed_size
                     (const Iot__Service__SmokeSensor__Properties   *message);
size_t iot__service__smoke_sensor__properties__pack
                     (const Iot__Service__SmokeSensor__Properties   *message,
                      uint8_t             *out);
size_t iot__service__smoke_sensor__properties__pack_to_buffer
                     (const Iot__Service__SmokeSensor__Properties   *message,
                      ProtobufCBuffer     *buffer);
Iot__Service__SmokeSensor__Properties *
       iot__service__smoke_sensor__properties__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   iot__service__smoke_sensor__properties__free_unpacked
                     (Iot__Service__SmokeSensor__Properties *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Iot__Service__SmokeSensor__EventSmokeDetected_Closure)
                 (const Iot__Service__SmokeSensor__EventSmokeDetected *message,
                  void *closure_data);
typedef void (*Iot__Service__SmokeSensor__EventNoSmoke_Closure)
                 (const Iot__Service__SmokeSensor__EventNoSmoke *message,
                  void *closure_data);
typedef void (*Iot__Service__SmokeSensor__Properties_Closure)
                 (const Iot__Service__SmokeSensor__Properties *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor iot__service__smoke_sensor__event_smoke_detected__descriptor;
extern const ProtobufCMessageDescriptor iot__service__smoke_sensor__event_no_smoke__descriptor;
extern const ProtobufCMessageDescriptor iot__service__smoke_sensor__properties__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_smokeSensor_2eproto__INCLUDED */

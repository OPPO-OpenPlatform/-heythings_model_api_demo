/* Generated by the heythings model compiler.  DO NOT EDIT! */
/* Generated from: raf.proto */

#ifndef RAF_SERVICE_H
#define RAF_SERVICE_H

#include "hey/types.h"

enum RAF_PROPERTY {
    RAF_PROPERTY_POWER = 1,
    RAF_PROPERTY_MANNULAUTOSTA = 2,
    RAF_PROPERTY_FAULTSTA = 3,
    RAF_PROPERTY_CURRENTTEMPERATURE = 4,
    RAF_PROPERTY_TARGETTEMPERATURE = 5,
    RAF_PROPERTY_CURRENTHUMIDITY = 6,
    RAF_PROPERTY_TARGETHUMIDITY = 7,
    RAF_PROPERTY_CURRENTPRES1 = 8,
    RAF_PROPERTY_CURRENTPRES2 = 9,
    RAF_PROPERTY_TARGETPRES1 = 10,
    RAF_PROPERTY_TARGETPRES2 = 11,
    RAF_PROPERTY_CO2 = 12,
    RAF_PROPERTY_TARGETCO2 = 13,
    RAF_PROPERTY_VLVOPENING = 14,
    RAF_PROPERTY_VLVFEEDBACK = 15,
    RAF_PROPERTY_MAXHUMIDITY = 16
};

struct raf_properties {
    bool power;
    bool mannulautosta;
    bool faultsta;
    uint32_t currenttemperature;
    uint32_t targettemperature;
    uint32_t currenthumidity;
    uint32_t targethumidity;
    uint32_t currentpres1;
    uint32_t currentpres2;
    uint32_t targetpres1;
    uint32_t targetpres2;
    uint32_t co2;
    uint32_t targetco2;
    uint32_t vlvopening;
    uint32_t vlvfeedback;
    uint32_t maxhumidity;
};

/**
 * @brief raf service initialization
 * @param properties [raf service properties]
 * @return int32_t   [initialize result]
*/
int32_t raf_service_init(const struct raf_properties *properties);

/**
 * @brief data at "struct hey_array_node" pack and unpack
*/
/**
 * @brief properties write callback of raf service
 * @param count      [the number of properties will be written]
 * @param enumerate  [the iid enumeration of properties will be written]
 * @param properties [properties structure with written content]
 * @return int32_t   [be writed result, 0 means success]
*/
int32_t raf_properties_write_cb(size_t count, uint32_t *enumerate, struct raf_properties *properties);

/**
 * @brief update properties of raf service
 * @param count      [the number of properties to be updated]
 * @param enumerate  [the iid enumeration of properties to be updated]
 * @param properties [properties structure with updated content]
 * @return int32_t   [update result]
 */
int32_t raf_properties_update(size_t count, uint32_t *enumerate, struct raf_properties *properties);

#endif /* RAF_SERVICE_H */
